{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "PolicyXMLBaseUrl": {
      "type": "string"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "oAuth2": {
            "authorizationServerId": "staging-careercircle-auth0"
          },
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "apiVersion": "v2",
        "isCurrent": true,
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('ApimServiceName')), '/apiVersionSets/f5663519-3e82-4dd6-80f4-e61eca773633')]",
        "subscriptionRequired": true,
        "displayName": "API2-Staging",
        "serviceUrl": "https://careercircleapi-staging.azurewebsites.net/",
        "path": "",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "File Upload": {
                "type": "object",
                "properties": {
                  "mimeType": {
                    "type": "string"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "base64EncodedData": {
                    "type": "string"
                  }
                }
              },
              "Skills Subscribers - Update": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Skills List": {
                "type": "object",
                "properties": {
                  "skills": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skillGuid": {
                          "type": "string"
                        },
                        "skillName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "skillGuid",
                        "skillName"
                      ]
                    }
                  }
                }
              },
              "Subscriber Profile Edit - Update": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  }
                },
                "example": {
                  "subscriberGuid": "39C9AB6B-1DBE-4BCE-B544-C2C560F74FF2",
                  "name": "Bob Johnson",
                  "title": "Software Developer",
                  "location": "Portland, OR",
                  "email": "bjohnson@gmail.com",
                  "biography": "This is a biography."
                }
              },
              "Job Counts By State And Company": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "statePrefix": {
                      "type": "string"
                    },
                    "totalJobCount": {
                      "type": "integer"
                    },
                    "companyPosting": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "companyGuid": {
                            "type": "string"
                          },
                          "companyName": {
                            "type": "string"
                          },
                          "jobCount": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "companyGuid",
                          "companyName",
                          "jobCount"
                        ]
                      }
                    }
                  },
                  "required": [
                    "statePrefix",
                    "totalJobCount",
                    "companyPosting"
                  ]
                }
              },
              "Job CareerPath Recommendations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "jobPostingGuid": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "companyLogoUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "jobPostingGuid",
                    "title",
                    "companyName",
                    "location",
                    "companyLogoUrl"
                  ]
                }
              },
              "Industry": {
                "type": "object",
                "properties": {
                  "industryName": {
                    "type": "string"
                  }
                }
              },
              "State": {
                "type": "object",
                "properties": {
                  "stateName": {
                    "type": "string"
                  },
                  "code": {
                    "type": "integer"
                  },
                  "sequence": {
                    "type": "integer"
                  }
                }
              },
              "Skill": {
                "type": "object",
                "properties": {
                  "skillName": {
                    "type": "string"
                  }
                }
              },
              "Education Level": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "Experience Level": {
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                }
              },
              "Compensation Type": {
                "type": "object",
                "properties": {
                  "compensationTypeName": {
                    "type": "string"
                  }
                }
              },
              "Compensation Type List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "compensationTypeGuid": {
                      "type": "string"
                    },
                    "compensationTypeName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "compensationTypeGuid",
                    "compensationTypeName"
                  ]
                }
              },
              "Employment Type": {
                "type": "object",
                "properties": {
                  "employmentTypeName": {
                    "type": "string"
                  }
                }
              },
              "Employment Type List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "employmentTypeGuid": {
                      "type": "string"
                    },
                    "employmentTypeName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "employmentTypeGuid",
                    "employmentTypeName"
                  ]
                }
              },
              "Security Clearance": {
                "type": "object",
                "properties": {
                  "securityClearanceGuid": {
                    "type": "string"
                  },
                  "securityClearanceName": {
                    "type": "string"
                  }
                }
              },
              "Security Clearance List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "securityClearanceGuid": {
                      "type": "string"
                    },
                    "securityClearanceName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "securityClearanceGuid",
                    "securityClearanceName"
                  ]
                }
              },
              "Contact Types - List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "contactTypeGuid": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "contactTypeGuid",
                    "name"
                  ]
                }
              },
              "Jobs Admin List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "jobPostingGuid": {
                      "type": "string"
                    },
                    "postingDateUTC": {
                      "type": "string"
                    },
                    "postingExpirationDateUTC": {
                      "type": "string"
                    },
                    "applicationDeadlineUTC": {
                      "type": "string"
                    },
                    "recruiterGuid": {
                      "type": "string"
                    },
                    "companyGuid": {
                      "type": "string"
                    },
                    "industryGuid": {
                      "type": "string"
                    },
                    "jobCategoryGuid": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "securityClearanceGuid": {
                      "type": "string"
                    },
                    "employmentTypeGuid": {
                      "type": "string"
                    },
                    "h2Visa": {
                      "type": "boolean"
                    },
                    "isAgencyJobPosting": {
                      "type": "boolean"
                    },
                    "telecommutePercentage": {
                      "type": "integer"
                    },
                    "compensation": {
                      "type": "integer"
                    },
                    "compensationTypeGuid": {
                      "type": "string"
                    },
                    "thirdPartyApply": {
                      "type": "boolean"
                    },
                    "thirdPartyApplicationUrl": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "province": {
                      "type": "string"
                    },
                    "postalCode": {
                      "type": "integer"
                    },
                    "streetAddress": {
                      "type": "string"
                    },
                    "experienceLevelGuid": {
                      "type": "string"
                    },
                    "educationLevel": {
                      "type": "string"
                    },
                    "jobPostingSkillGuids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isPrivate": {
                      "type": "integer"
                    },
                    "thirdPartyIdentifier": {
                      "type": "string"
                    },
                    "metaDescription": {
                      "type": "string"
                    },
                    "metaTitle": {
                      "type": "string"
                    },
                    "metaKeywords": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "jobPostingGuid",
                    "postingDateUTC",
                    "postingExpirationDateUTC",
                    "applicationDeadlineUTC",
                    "recruiterGuid",
                    "companyGuid",
                    "industryGuid",
                    "jobCategoryGuid",
                    "title",
                    "description",
                    "securityClearanceGuid",
                    "employmentTypeGuid",
                    "h2Visa",
                    "isAgencyJobPosting",
                    "telecommutePercentage",
                    "compensation",
                    "compensationTypeGuid",
                    "thirdPartyApply",
                    "thirdPartyApplicationUrl",
                    "country",
                    "city",
                    "province",
                    "postalCode",
                    "streetAddress",
                    "experienceLevelGuid",
                    "educationLevel",
                    "jobPostingSkillGuids",
                    "isPrivate",
                    "thirdPartyIdentifier",
                    "metaDescription",
                    "metaTitle",
                    "metaKeywords"
                  ]
                }
              },
              "Company": {
                "type": "object",
                "properties": {
                  "companyGuid": {
                    "type": "string"
                  },
                  "isHiringAgency": {
                    "type": "boolean"
                  },
                  "companyName": {
                    "type": "string"
                  },
                  "isJobPoster": {
                    "type": "boolean"
                  },
                  "logoUrl": {
                    "type": "string"
                  }
                }
              },
              "Country": {
                "type": "object",
                "properties": {
                  "countryGuid": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "officialName": {
                    "type": "string"
                  },
                  "sequence": {
                    "type": "integer"
                  },
                  "code2": {
                    "type": "string"
                  },
                  "code3": {
                    "type": "string"
                  }
                }
              },
              "Country List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "countryGuid": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "officialName": {
                      "type": "string"
                    },
                    "sequence": {
                      "type": "integer"
                    },
                    "code2": {
                      "type": "string"
                    },
                    "code3": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "countryGuid",
                    "displayName",
                    "officialName",
                    "sequence",
                    "code2",
                    "code3"
                  ]
                }
              },
              "Education Level List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "educationLevelGuid": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "educationLevelGuid",
                    "name"
                  ]
                }
              },
              "Experience Level List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "experienceLevelGuid": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "experienceLevelGuid",
                    "displayName",
                    "code"
                  ]
                }
              },
              "Industry List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "industryGuid": {
                      "type": "string"
                    },
                    "industryName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "industryGuid",
                    "industryName"
                  ]
                }
              },
              "State List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "stateGuid": {
                      "type": "string"
                    },
                    "stateName": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer"
                    },
                    "sequence": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "stateGuid",
                    "stateName",
                    "code",
                    "sequence"
                  ]
                }
              },
              "Course Search - Query": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "courseGuid": {
                      "type": "string"
                    },
                    "lessonCount": {
                      "type": "string"
                    },
                    "courseLevel": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "courseLevelGuid": {
                          "type": "string"
                        }
                      }
                    },
                    "vendorGuid": {
                      "type": "string"
                    },
                    "vendorLogoUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "courseGuid",
                    "lessonCount",
                    "courseLevel",
                    "vendorGuid",
                    "vendorLogoUrl"
                  ]
                }
              },
              "Course Variant - List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "courseVariantGuid": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "courseVariantGuid",
                    "name"
                  ]
                }
              },
              "Course - Enroll": {
                "type": "object",
                "properties": {
                  "courseGuid": {
                    "type": "string"
                  },
                  "courseVariantGuid": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "billingFirstName": {
                    "type": "string"
                  },
                  "billingLastName": {
                    "type": "string"
                  },
                  "billingAddress": {
                    "type": "string"
                  },
                  "billingCity": {
                    "type": "string"
                  },
                  "billingCountryGuid": {
                    "type": "string"
                  },
                  "billingProviceGuid": {
                    "type": "string"
                  },
                  "billingPostalCode": {
                    "type": "string"
                  },
                  "ccNumber": {
                    "type": "string"
                  },
                  "ccExpiration": {
                    "type": "string"
                  },
                  "ccCVV": {
                    "type": "string"
                  },
                  "ccPostalCode": {
                    "type": "string"
                  },
                  "promoCodes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "promoCodeGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "promoCodeGuid"
                      ]
                    }
                  }
                }
              },
              "Promo Code": {
                "type": "object",
                "properties": {
                  "promoCodeGuid": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "discountAmount": {
                    "type": "string"
                  }
                }
              },
              "Course - List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "courseGuid": {
                      "type": "string"
                    },
                    "lessonCount": {
                      "type": "string"
                    },
                    "courseLevel": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "courseLevelGuid": {
                          "type": "string"
                        }
                      }
                    },
                    "vendorGuid": {
                      "type": "string"
                    },
                    "vendorLogoUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "courseGuid",
                    "lessonCount",
                    "courseLevel",
                    "vendorGuid",
                    "vendorLogoUrl"
                  ]
                }
              },
              "Course Level - List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "courseLevelGuid": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "courseLevelGuid",
                    "name"
                  ]
                }
              },
              "Course Level": {
                "type": "object",
                "properties": {
                  "courseLevelGuid": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "example": {
                  "courseLevelGuid": "string",
                  "courseLevelName": "string"
                }
              },
              "Course CareerPath Recommendations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "courseGuid": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "imgUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "courseGuid",
                    "name",
                    "imgUrl"
                  ]
                }
              },
              "Offer - List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "offerGuid": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "disclaimer": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "offerGuid",
                    "name",
                    "description",
                    "disclaimer",
                    "url",
                    "code"
                  ]
                }
              },
              "Course Related Jobs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "jobPostingGuid": {
                      "type": "string"
                    },
                    "postingDateUTC": {
                      "type": "string"
                    },
                    "companyLogoUrl": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "semanticJobPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "jobPostingGuid",
                    "postingDateUTC",
                    "companyLogoUrl",
                    "companyName",
                    "title",
                    "semanticJobPath"
                  ]
                },
                "example": [
                  {
                    "jobPostingGuid": "string",
                    "postingDateUTC": "string",
                    "companyLogoUrl": "string",
                    "companyName": "string",
                    "title": "string",
                    "semanticJobPath": "string"
                  }
                ]
              },
              "Job Alert List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "keywords": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "frequency": {
                      "type": "string"
                    },
                    "executionDayOfWeek": {
                      "type": "string"
                    },
                    "jobAlertGuid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "keywords",
                    "location",
                    "frequency",
                    "executionDayOfWeek",
                    "jobAlertGuid"
                  ]
                }
              },
              "Job Application": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "partnerName": {
                    "type": "string"
                  },
                  "coverLetter": {
                    "type": "string"
                  }
                }
              },
              "Job Browse Result": {
                "type": "object",
                "properties": {
                  "requestId": {
                    "type": "string"
                  },
                  "clientEventId": {},
                  "pageSize": {
                    "type": "integer"
                  },
                  "pageNum": {
                    "type": "integer"
                  },
                  "jobCount": {
                    "type": "integer"
                  },
                  "totalHits": {
                    "type": "integer"
                  },
                  "numPages": {
                    "type": "integer"
                  },
                  "searchTimeInMilliseconds": {
                    "type": "number"
                  },
                  "searchQueryTimeInTicks": {
                    "type": "integer"
                  },
                  "searchMappingTimeInTicks": {
                    "type": "integer"
                  },
                  "jobs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "jobPostingGuid": {
                          "type": "string"
                        },
                        "postingDateUTC": {
                          "type": "string"
                        },
                        "companyLogoUrl": {},
                        "companyName": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "province": {
                          "type": "string"
                        },
                        "semanticJobPath": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "jobPostingGuid",
                        "postingDateUTC",
                        "companyLogoUrl",
                        "companyName",
                        "title",
                        "city",
                        "province",
                        "semanticJobPath"
                      ]
                    }
                  },
                  "facets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "facets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "urlParam": {
                                "type": "string"
                              },
                              "count": {
                                "type": "integer"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "label",
                              "urlParam",
                              "count",
                              "url"
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "facets"
                      ]
                    }
                  }
                }
              },
              "Job Search - Similar Jobs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "jobPostingGuid": {
                      "type": "string"
                    },
                    "postingDateUTC": {
                      "type": "string"
                    },
                    "companyLogoUrl": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "province": {
                      "type": "string"
                    },
                    "semanticJobPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "jobPostingGuid",
                    "postingDateUTC",
                    "companyLogoUrl",
                    "companyName",
                    "title",
                    "city",
                    "province",
                    "semanticJobPath"
                  ]
                }
              },
              "Subscriber - Create": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "subscriberGuid": {
                    "type": "string"
                  },
                  "isAgreeToMarketingEmails": {
                    "type": "string"
                  },
                  "auth0UserId": {
                    "type": "string"
                  }
                }
              },
              "Subscriber Profile Basic ": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "subscriberGuid": {
                    "type": "string"
                  },
                  "isAgreeToMarketingEmails": {
                    "type": "boolean"
                  },
                  "Auth0UserId": {
                    "type": "string"
                  }
                },
                "example": {
                  "firstName": "Jim",
                  "lastName": "Brazil",
                  "email": "jabrazil@archisinc.com",
                  "phoneNumber": "410-258-6001",
                  "subscriberGuid": "1197F926-E6C3-49D5-A0E2-8648566DE083",
                  "isAgreeToMarketingEmails": true,
                  "Auth0UserId": "Auth0UserId"
                }
              },
              "Skills List_1": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillGuid": {
                      "type": "string"
                    },
                    "skillName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "skillGuid",
                    "skillName"
                  ]
                }
              },
              "Subscriber Profile Experience - Update": {
                "type": "object",
                "properties": {
                  "company": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {},
                  "jobTitle": {
                    "type": "string"
                  },
                  "jobDescription": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "number"
                  },
                  "isCurrent": {
                    "type": "boolean"
                  }
                }
              },
              "Job Search - Keyword": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "value"
                  ]
                }
              },
              "Subscriber Profile Resume - Create": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string"
                  },
                  "mimeType": {
                    "type": "string"
                  },
                  "base64EncodedData": {
                    "type": "string"
                  }
                }
              },
              "Subscriber Profile Social": {
                "type": "object",
                "properties": {
                  "subscriberGuid": {
                    "type": "string"
                  },
                  "linkedInUrl": {
                    "type": "string"
                  },
                  "githubUrl": {
                    "type": "string"
                  },
                  "facebookUrl": {
                    "type": "string"
                  },
                  "stackOverflowUrl": {
                    "type": "string"
                  },
                  "twitterUrl": {
                    "type": "string"
                  },
                  "linkedInSyncDate": {
                    "type": "string"
                  },
                  "linkedInAvatarUrl": {
                    "type": "string"
                  }
                }
              },
              "Subscriber Profile Social - Update ": {
                "type": "object",
                "properties": {
                  "linkedInUrl": {
                    "type": "string"
                  },
                  "githubUrl": {
                    "type": "string"
                  },
                  "facebookUrl": {
                    "type": "string"
                  },
                  "stackOverflowUrl": {
                    "type": "string"
                  },
                  "twitterUrl": {
                    "type": "string"
                  },
                  "linkedInSyncDate": {
                    "type": "string"
                  },
                  "linkedInAvatarUrl": {
                    "type": "string"
                  }
                }
              },
              "Job Admin": {
                "type": "object",
                "properties": {
                  "jobPostingGuid": {
                    "type": "string"
                  },
                  "postingDateUTC": {
                    "type": "string"
                  },
                  "postingExpirationDateUTC": {
                    "type": "string"
                  },
                  "applicationDeadlineUTC": {
                    "type": "string"
                  },
                  "recruiter": {
                    "type": "object",
                    "properties": {
                      "recruiterGuid": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phoneNumber": {
                        "type": "string"
                      }
                    }
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "companyGuid": {
                        "type": "string"
                      },
                      "companyName": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "isHiringAgency": {
                        "type": "integer"
                      },
                      "isJobPoster": {
                        "type": "integer"
                      }
                    }
                  },
                  "industry": {},
                  "jobCategory": {},
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "securityClearance": {},
                  "employmentType": {},
                  "h2Visa": {
                    "type": "boolean"
                  },
                  "isAgencyJobPosting": {
                    "type": "boolean"
                  },
                  "telecommutePercentage": {
                    "type": "integer"
                  },
                  "compensation": {
                    "type": "integer"
                  },
                  "compensationType": {},
                  "thirdPartyApply": {
                    "type": "boolean"
                  },
                  "thirdPartyApplicationUrl": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "province": {
                    "type": "string"
                  },
                  "postalCode": {},
                  "streetAddress": {},
                  "experienceLevel": {},
                  "educationLevel": {},
                  "jobPostingSkills": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skillGuid": {
                          "type": "string"
                        },
                        "skillName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "skillGuid",
                        "skillName"
                      ]
                    }
                  },
                  "isPrivate": {
                    "type": "integer"
                  },
                  "semanticJobPath": {
                    "type": "string"
                  },
                  "thirdPartyIdentifier": {
                    "type": "string"
                  },
                  "metaDescription": {
                    "type": "string"
                  },
                  "metaTitle": {
                    "type": "string"
                  },
                  "metaKeywords": {
                    "type": "string"
                  }
                },
                "example": {
                  "subscriber": {
                    "subscriberGuid": "71A7156E-173F-4054-83ED-AD6127BAFE87"
                  },
                  "country": "US",
                  "city": "Towson",
                  "postalCode": "21204",
                  "province": "MD",
                  "streetAddress": "503 Groom Drive",
                  "company": {
                    "companyGuid": "DB15C9A0-4722-4AE7-9250-09B9E5DE8877",
                    "companyName": "Jim's Test Company"
                  },
                  "industry": {
                    "industryGuid": "972192d3-63e3-48e9-a7d9-98ed9675349c",
                    "name": "Jim's test industry"
                  },
                  "jobCategory": {
                    "jobCategoryGuid": "7B25FC3F-2BF1-4835-9F67-BD9F082A8886",
                    "name": "Some Job Category"
                  },
                  "jobStatus": 1,
                  "title": "Towson job with full address",
                  "description": "Should have industry and Job Category",
                  "securityClearance": {
                    "securityClearanceGuid": "db15c9a0-4722-4ae7-9250-09b9e5de8877",
                    "name": "Super Duper Secreter"
                  },
                  "employmentType": {
                    "employmentTypeGuid": "00000000-0000-0000-0000-000000000000",
                    "name": "Full Time"
                  },
                  "experienceLevel": {
                    "displayName": "Deputy Dog1",
                    "code": "Deputy_Dog",
                    "experienceLevelGuid": "7b9d0009-6bb0-44c8-922d-79b3436da73f"
                  },
                  "educationLevel": {
                    "EducationLevelGuid": "00000000-0000-0000-0000-000000000000",
                    "level": "Master's degree"
                  },
                  "h2Visa": false,
                  "telecommutePercentage": 10,
                  "compensation": 135,
                  "compensationTypeId": 1,
                  "compensationType": {
                    "compensationTypeGuid": "2a199896-cfe7-4ff5-b9a8-036b9bd1d200",
                    "compensationTypeName": "Hourly",
                    "isDeleted": 0,
                    "createDate": "2019-03-20T10:53:58.2591054Z",
                    "modifyDate": "2019-03-20T10:53:58.2591094Z",
                    "createGuid": "f2823883-686e-4d18-b0a9-46c176d5c928",
                    "modifyGuid": "c7bc045b-5e0e-47aa-821b-01ce493c7089"
                  },
                  "thirdPartyApply": false,
                  "thirdPartyApplicationUrl": "http://www.ebay.com",
                  "location": "21076",
                  "isDeleted": 0,
                  "createDate": "2019-03-20T10:53:58.261348Z",
                  "applicationDeadlineUTC": "2019-04-20T10:53:58.261348Z",
                  "modifyDate": "2019-03-20T10:53:58.2613522Z",
                  "createGuid": "dd3376ff-e7fa-40ba-9553-2b316242e629",
                  "modifyGuid": "0ab5aaf7-fa64-44f8-a2e8-5c1737bdc9f1",
                  "skills": [
                    {
                      "skillGuid": "DF774135-B4DE-41C8-8711-C8B690C17AFF",
                      "skillName": "c# development"
                    },
                    {
                      "skillGuid": "9F9142A1-CF78-4CCE-B123-DF2AB8AFA495",
                      "skillName": "javascript"
                    }
                  ]
                }
              },
              "Talent Profile": {
                "type": "object",
                "properties": {
                  "subscriberId": {
                    "type": "integer"
                  },
                  "subscriberGuid": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "dateOfBirth": {},
                  "phoneNumber": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "genderId": {},
                  "educationLevelId": {},
                  "profileImage": {},
                  "city": {
                    "type": "string"
                  },
                  "postalCode": {},
                  "linkedInUrl": {},
                  "facebookUrl": {},
                  "twitterUrl": {},
                  "stackOverflowUrl": {},
                  "githubUrl": {},
                  "hasOnboarded": {
                    "type": "integer"
                  },
                  "state": {},
                  "enrollments": {
                    "type": "array"
                  },
                  "skills": {
                    "type": "array"
                  },
                  "workHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subscriberWorkHistoryId": {
                          "type": "integer"
                        },
                        "subscriberWorkHistoryGuid": {
                          "type": "string"
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "endDate": {
                          "type": "string"
                        },
                        "isCurrent": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "jobDescription": {
                          "type": "string"
                        },
                        "compensation": {
                          "type": "integer"
                        },
                        "compensationType": {},
                        "compensationTypeGuid": {
                          "type": "string"
                        },
                        "company": {
                          "type": "string"
                        },
                        "isDeleted": {
                          "type": "integer"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "createGuid": {
                          "type": "string"
                        },
                        "modifyGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "subscriberWorkHistoryId",
                        "subscriberWorkHistoryGuid",
                        "startDate",
                        "endDate",
                        "isCurrent",
                        "title",
                        "jobDescription",
                        "compensation",
                        "compensationType",
                        "compensationTypeGuid",
                        "company",
                        "isDeleted",
                        "createDate",
                        "modifyDate",
                        "createGuid",
                        "modifyGuid"
                      ]
                    }
                  },
                  "educationHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subscriberEducationHistoryId": {
                          "type": "integer"
                        },
                        "subscriberEducationHistoryGuid": {
                          "type": "string"
                        },
                        "educationalInstitution": {
                          "type": "string"
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "endDate": {
                          "type": "string"
                        },
                        "degreeDate": {
                          "type": "string"
                        },
                        "educationalDegreeType": {
                          "type": "string"
                        },
                        "educationalDegree": {
                          "type": "string"
                        },
                        "isDeleted": {
                          "type": "integer"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "createGuid": {
                          "type": "string"
                        },
                        "modifyGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "subscriberEducationHistoryId",
                        "subscriberEducationHistoryGuid",
                        "educationalInstitution",
                        "startDate",
                        "endDate",
                        "degreeDate",
                        "educationalDegreeType",
                        "educationalDegree",
                        "isDeleted",
                        "createDate",
                        "modifyDate",
                        "createGuid",
                        "modifyGuid"
                      ]
                    }
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subscriberFileGuid": {
                          "type": "string"
                        },
                        "blobName": {
                          "type": "string"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "simpleName": {
                          "type": "string"
                        },
                        "mimeType": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "subscriberFileGuid",
                        "blobName",
                        "createDate",
                        "simpleName",
                        "mimeType"
                      ]
                    }
                  },
                  "eligibleCampaigns": {
                    "type": "array"
                  },
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "notificationGuid": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "isTargeted": {
                          "type": "boolean"
                        },
                        "expirationDate": {},
                        "hasRead": {
                          "type": "integer"
                        },
                        "isDeleted": {
                          "type": "integer"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "createGuid": {
                          "type": "string"
                        },
                        "modifyGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "notificationGuid",
                        "title",
                        "description",
                        "isTargeted",
                        "expirationDate",
                        "hasRead",
                        "isDeleted",
                        "createDate",
                        "modifyDate",
                        "createGuid",
                        "modifyGuid"
                      ]
                    }
                  },
                  "notificationEmailsEnabled": {
                    "type": "boolean"
                  },
                  "isEmailVerified": {
                    "type": "boolean"
                  },
                  "campaignOffer": {
                    "type": "string"
                  },
                  "hasVerificationEmail": {
                    "type": "boolean"
                  },
                  "linkedInSyncDate": {},
                  "linkedInAvatarUrl": {},
                  "avatarUrl": {},
                  "cloudTalentUri": {
                    "type": "string"
                  },
                  "cloudTalentIndexStatus": {
                    "type": "integer"
                  },
                  "cloudTalentIndexInfo": {
                    "type": "string"
                  },
                  "isDeleted": {
                    "type": "integer"
                  },
                  "createDate": {
                    "type": "string"
                  },
                  "modifyDate": {
                    "type": "string"
                  },
                  "createGuid": {
                    "type": "string"
                  },
                  "modifyGuid": {
                    "type": "string"
                  }
                }
              },
              "SubscriberDto": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "referrerUrl": {
                    "type": "string"
                  },
                  "jobReferralCode": {
                    "type": "string"
                  },
                  "partnerGuid": {
                    "type": "string"
                  },
                  "isGatedDownload": {
                    "type": "boolean"
                  },
                  "gatedDownloadFileUrl": {},
                  "gatedDownloadMaxAttemptsAllowed": {
                    "type": "integer"
                  }
                }
              },
              "Traitify - Create": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "Course - Refer A Friend": {
                "type": "object",
                "properties": {
                  "courseGuid": {
                    "type": "string"
                  },
                  "referralEmail": {
                    "type": "string"
                  },
                  "referralName": {
                    "type": "string"
                  },
                  "referralDescription": {
                    "type": "string"
                  }
                }
              },
              "Job - Refer A Friend": {
                "type": "object",
                "properties": {
                  "jobGuid": {
                    "type": "string"
                  },
                  "referralEmail": {
                    "type": "string"
                  },
                  "referralName": {
                    "type": "string"
                  },
                  "referralDescription": {
                    "type": "string"
                  }
                }
              },
              "Course - Detail": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "courseLevel": {
                    "type": "integer"
                  },
                  "numLessons": {
                    "type": "integer"
                  },
                  "vendorName": {
                    "type": "string"
                  },
                  "numEnrollments": {
                    "type": "integer"
                  },
                  "newFlag": {
                    "type": "integer"
                  },
                  "vendorGuid": {
                    "type": "string"
                  },
                  "vendorLogoUrl": {
                    "type": "string"
                  },
                  "thumbnailUrl": {
                    "type": "string"
                  }
                },
                "example": {
                  "title": "string",
                  "duration": "string",
                  "description": "string",
                  "courseLevel": {
                    "name": "string",
                    "courseLevelGuid": "string"
                  },
                  "vendorGuid": "string",
                  "vendorLogoUrl": "string"
                }
              },
              "Career Path - Detail": {
                "type": "object",
                "properties": {
                  "courseLevelGuid": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "integer"
                  }
                }
              },
              "Course Guid List": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Job Guid List": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "Company List": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "companyGuid": {
                      "type": "string"
                    },
                    "isHiringAgency": {
                      "type": "boolean"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "isJobPoster": {
                      "type": "boolean"
                    },
                    "logoUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "companyGuid",
                    "isHiringAgency",
                    "companyName",
                    "isJobPoster",
                    "logoUrl"
                  ]
                },
                "example": [
                  {
                    "companyGuid": "string",
                    "isHiringAgency": false,
                    "companyName": "string",
                    "isJobPoster": false,
                    "logoUrl": "string"
                  }
                ]
              },
              "Educational Degree Types - All": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "educationalDegreeTypeGuid": {
                      "type": "string"
                    },
                    "degreeType": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "educationalDegreeTypeGuid",
                    "degreeType"
                  ]
                }
              },
              "Subscriber Profile Education - Update": {
                "type": "object",
                "properties": {
                  "educationalInstitution": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "degreeDate": {
                    "type": "string"
                  },
                  "educationalDegreeTypeGuid": {
                    "type": "string"
                  },
                  "educationalDegree": {
                    "type": "string"
                  }
                }
              },
              "Subscriber Profile Education - Create": {
                "type": "object",
                "properties": {
                  "educationalInstitution": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "degreeDate": {
                    "type": "string"
                  },
                  "educationalDegreeTypeGuid": {
                    "type": "string"
                  },
                  "educationalDegree": {
                    "type": "string"
                  }
                }
              },
              "Job Search Result": {
                "type": "object",
                "properties": {
                  "requestId": {
                    "type": "string"
                  },
                  "clientEventId": {},
                  "pageSize": {
                    "type": "integer"
                  },
                  "pageNum": {
                    "type": "integer"
                  },
                  "jobCount": {
                    "type": "integer"
                  },
                  "totalHits": {
                    "type": "integer"
                  },
                  "numPages": {
                    "type": "integer"
                  },
                  "searchTimeInMilliseconds": {
                    "type": "number"
                  },
                  "searchQueryTimeInTicks": {
                    "type": "integer"
                  },
                  "searchMappingTimeInTicks": {
                    "type": "integer"
                  },
                  "jobs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "jobPostingGuid": {
                          "type": "string"
                        },
                        "postingDateUTC": {
                          "type": "string"
                        },
                        "companyLogoUrl": {},
                        "companyName": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "province": {
                          "type": "string"
                        },
                        "semanticJobPath": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "jobPostingGuid",
                        "postingDateUTC",
                        "companyLogoUrl",
                        "companyName",
                        "title",
                        "city",
                        "province",
                        "semanticJobPath"
                      ]
                    }
                  },
                  "facets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "facets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "urlParam": {
                                "type": "string"
                              },
                              "count": {
                                "type": "integer"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "label",
                              "urlParam",
                              "count",
                              "url"
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "facets"
                      ]
                    }
                  },
                  "skillHistogram": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skill": {
                          "type": "string"
                        },
                        "count": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "Job Favorite List": {
                "type": "object",
                "properties": {
                  "jobs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "jobPostingGuid": {
                          "type": "string"
                        },
                        "postingDateUTC": {
                          "type": "string"
                        },
                        "companyLogoUrl": {
                          "type": "string"
                        },
                        "companyName": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "province": {
                          "type": "string"
                        },
                        "semanticJobPath": {
                          "type": "string"
                        },
                        "postalCode": {
                          "type": "string"
                        },
                        "streetAddress": {
                          "type": "string"
                        },
                        "commuteTime": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "jobPostingGuid",
                        "postingDateUTC",
                        "companyLogoUrl",
                        "companyName",
                        "title",
                        "city",
                        "province",
                        "semanticJobPath"
                      ]
                    }
                  }
                },
                "example": {
                  "favorites": [
                    {
                      "jobPostingGuid": "6feeaa35-3186-4209-91d3-30819716405f",
                      "postingDateUTC": "2019-08-21T20:42:26Z",
                      "expirationDateUTC": "2019-09-30T23:59:59Z",
                      "hasApplied": true,
                      "companyLogoUrl": "Company/7E1D8AB0-3440-4773-88B6-2722DA9F2FED/aerotek.jpg",
                      "companyName": "Aerotek",
                      "title": "QA Medical Records Specialist",
                      "city": "Philadelphia",
                      "province": "PA",
                      "semanticJobPath": "/job/all/all/us/pa/philadelphia/6feeaa35-3186-4209-91d3-30819716405f"
                    }
                  ]
                }
              },
              "Resume Parse Questions": {
                "type": "object",
                "properties": {
                  "educationHistoryQuestions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "resumeParseResultGuid": {
                          "type": "string"
                        },
                        "resumeParse": {
                          "type": "object",
                          "properties": {
                            "resumeParseGuid": {
                              "type": "string"
                            },
                            "subscriber": {
                              "type": "object",
                              "properties": {
                                "subscriberId": {
                                  "type": "integer"
                                },
                                "subscriberGuid": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "type": "string"
                                },
                                "lastName": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "isVerified": {
                                  "type": "boolean"
                                },
                                "dateOfBirth": {},
                                "phoneNumber": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "genderId": {},
                                "educationLevelId": {},
                                "profileImage": {},
                                "city": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "linkedInUrl": {},
                                "facebookUrl": {},
                                "twitterUrl": {},
                                "stackOverflowUrl": {},
                                "githubUrl": {},
                                "hasOnboarded": {
                                  "type": "integer"
                                },
                                "state": {},
                                "enrollments": {
                                  "type": "array"
                                },
                                "skills": {
                                  "type": "array"
                                },
                                "workHistory": {
                                  "type": "array"
                                },
                                "educationHistory": {
                                  "type": "array"
                                },
                                "files": {
                                  "type": "array"
                                },
                                "eligibleCampaigns": {
                                  "type": "array"
                                },
                                "notifications": {
                                  "type": "array"
                                },
                                "notificationEmailsEnabled": {
                                  "type": "boolean"
                                },
                                "campaignOffer": {},
                                "hasVerificationEmail": {
                                  "type": "boolean"
                                },
                                "linkedInSyncDate": {
                                  "type": "string"
                                },
                                "linkedInAvatarUrl": {
                                  "type": "string"
                                },
                                "avatarUrl": {
                                  "type": "string"
                                },
                                "cloudTalentUri": {
                                  "type": "string"
                                },
                                "cloudTalentIndexStatus": {
                                  "type": "integer"
                                },
                                "cloudTalentIndexInfo": {
                                  "type": "string"
                                },
                                "isDeleted": {
                                  "type": "integer"
                                },
                                "createDate": {
                                  "type": "string"
                                },
                                "modifyDate": {
                                  "type": "string"
                                },
                                "createGuid": {
                                  "type": "string"
                                },
                                "modifyGuid": {
                                  "type": "string"
                                }
                              }
                            },
                            "subscriberFile": {},
                            "parseStatus": {
                              "type": "integer"
                            },
                            "requiresMerge": {
                              "type": "integer"
                            },
                            "resumeParseResults": {}
                          }
                        },
                        "parseStatus": {
                          "type": "integer"
                        },
                        "targetTypeName": {
                          "type": "string"
                        },
                        "targetProperty": {
                          "type": "string"
                        },
                        "parsedValue": {
                          "type": "string"
                        },
                        "existingValue": {
                          "type": "string"
                        },
                        "existingObjectGuid": {
                          "type": "string"
                        },
                        "prompt": {
                          "type": "string"
                        },
                        "profileSectionId": {
                          "type": "integer"
                        },
                        "processingMessage": {},
                        "isDeleted": {
                          "type": "integer"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "createGuid": {
                          "type": "string"
                        },
                        "modifyGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "resumeParseResultGuid",
                        "resumeParse",
                        "parseStatus",
                        "targetTypeName",
                        "targetProperty",
                        "parsedValue",
                        "existingValue",
                        "existingObjectGuid",
                        "prompt",
                        "profileSectionId",
                        "processingMessage",
                        "isDeleted",
                        "createDate",
                        "modifyDate",
                        "createGuid",
                        "modifyGuid"
                      ]
                    }
                  },
                  "workHistoryQuestions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "resumeParseResultGuid": {
                          "type": "string"
                        },
                        "resumeParse": {
                          "type": "object",
                          "properties": {
                            "resumeParseGuid": {
                              "type": "string"
                            },
                            "subscriber": {
                              "type": "object",
                              "properties": {
                                "subscriberId": {
                                  "type": "integer"
                                },
                                "subscriberGuid": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "type": "string"
                                },
                                "lastName": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "isVerified": {
                                  "type": "boolean"
                                },
                                "dateOfBirth": {},
                                "phoneNumber": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "genderId": {},
                                "educationLevelId": {},
                                "profileImage": {},
                                "city": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "linkedInUrl": {},
                                "facebookUrl": {},
                                "twitterUrl": {},
                                "stackOverflowUrl": {},
                                "githubUrl": {},
                                "hasOnboarded": {
                                  "type": "integer"
                                },
                                "state": {},
                                "enrollments": {
                                  "type": "array"
                                },
                                "skills": {
                                  "type": "array"
                                },
                                "workHistory": {
                                  "type": "array"
                                },
                                "educationHistory": {
                                  "type": "array"
                                },
                                "files": {
                                  "type": "array"
                                },
                                "eligibleCampaigns": {
                                  "type": "array"
                                },
                                "notifications": {
                                  "type": "array"
                                },
                                "notificationEmailsEnabled": {
                                  "type": "boolean"
                                },
                                "campaignOffer": {},
                                "hasVerificationEmail": {
                                  "type": "boolean"
                                },
                                "linkedInSyncDate": {
                                  "type": "string"
                                },
                                "linkedInAvatarUrl": {
                                  "type": "string"
                                },
                                "avatarUrl": {
                                  "type": "string"
                                },
                                "cloudTalentUri": {
                                  "type": "string"
                                },
                                "cloudTalentIndexStatus": {
                                  "type": "integer"
                                },
                                "cloudTalentIndexInfo": {
                                  "type": "string"
                                },
                                "isDeleted": {
                                  "type": "integer"
                                },
                                "createDate": {
                                  "type": "string"
                                },
                                "modifyDate": {
                                  "type": "string"
                                },
                                "createGuid": {
                                  "type": "string"
                                },
                                "modifyGuid": {
                                  "type": "string"
                                }
                              }
                            },
                            "subscriberFile": {},
                            "parseStatus": {
                              "type": "integer"
                            },
                            "requiresMerge": {
                              "type": "integer"
                            },
                            "resumeParseResults": {}
                          }
                        },
                        "parseStatus": {
                          "type": "integer"
                        },
                        "targetTypeName": {
                          "type": "string"
                        },
                        "targetProperty": {
                          "type": "string"
                        },
                        "parsedValue": {
                          "type": "string"
                        },
                        "existingValue": {
                          "type": "string"
                        },
                        "existingObjectGuid": {
                          "type": "string"
                        },
                        "prompt": {
                          "type": "string"
                        },
                        "profileSectionId": {
                          "type": "integer"
                        },
                        "processingMessage": {},
                        "isDeleted": {
                          "type": "integer"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "createGuid": {
                          "type": "string"
                        },
                        "modifyGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "resumeParseResultGuid",
                        "resumeParse",
                        "parseStatus",
                        "targetTypeName",
                        "targetProperty",
                        "parsedValue",
                        "existingValue",
                        "existingObjectGuid",
                        "prompt",
                        "profileSectionId",
                        "processingMessage",
                        "isDeleted",
                        "createDate",
                        "modifyDate",
                        "createGuid",
                        "modifyGuid"
                      ]
                    }
                  },
                  "contactQuestions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "resumeParseResultGuid": {
                          "type": "string"
                        },
                        "resumeParse": {
                          "type": "object",
                          "properties": {
                            "resumeParseGuid": {
                              "type": "string"
                            },
                            "subscriber": {
                              "type": "object",
                              "properties": {
                                "subscriberId": {
                                  "type": "integer"
                                },
                                "subscriberGuid": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "type": "string"
                                },
                                "lastName": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "isVerified": {
                                  "type": "boolean"
                                },
                                "dateOfBirth": {},
                                "phoneNumber": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "genderId": {},
                                "educationLevelId": {},
                                "profileImage": {},
                                "city": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "linkedInUrl": {},
                                "facebookUrl": {},
                                "twitterUrl": {},
                                "stackOverflowUrl": {},
                                "githubUrl": {},
                                "hasOnboarded": {
                                  "type": "integer"
                                },
                                "state": {},
                                "enrollments": {
                                  "type": "array"
                                },
                                "skills": {
                                  "type": "array"
                                },
                                "workHistory": {
                                  "type": "array"
                                },
                                "educationHistory": {
                                  "type": "array"
                                },
                                "files": {
                                  "type": "array"
                                },
                                "eligibleCampaigns": {
                                  "type": "array"
                                },
                                "notifications": {
                                  "type": "array"
                                },
                                "notificationEmailsEnabled": {
                                  "type": "boolean"
                                },
                                "campaignOffer": {},
                                "hasVerificationEmail": {
                                  "type": "boolean"
                                },
                                "linkedInSyncDate": {
                                  "type": "string"
                                },
                                "linkedInAvatarUrl": {
                                  "type": "string"
                                },
                                "avatarUrl": {
                                  "type": "string"
                                },
                                "cloudTalentUri": {
                                  "type": "string"
                                },
                                "cloudTalentIndexStatus": {
                                  "type": "integer"
                                },
                                "cloudTalentIndexInfo": {
                                  "type": "string"
                                },
                                "isDeleted": {
                                  "type": "integer"
                                },
                                "createDate": {
                                  "type": "string"
                                },
                                "modifyDate": {
                                  "type": "string"
                                },
                                "createGuid": {
                                  "type": "string"
                                },
                                "modifyGuid": {
                                  "type": "string"
                                }
                              }
                            },
                            "subscriberFile": {},
                            "parseStatus": {
                              "type": "integer"
                            },
                            "requiresMerge": {
                              "type": "integer"
                            },
                            "resumeParseResults": {}
                          }
                        },
                        "parseStatus": {
                          "type": "integer"
                        },
                        "targetTypeName": {
                          "type": "string"
                        },
                        "targetProperty": {
                          "type": "string"
                        },
                        "parsedValue": {
                          "type": "string"
                        },
                        "existingValue": {
                          "type": "string"
                        },
                        "existingObjectGuid": {
                          "type": "string"
                        },
                        "prompt": {
                          "type": "string"
                        },
                        "profileSectionId": {
                          "type": "integer"
                        },
                        "processingMessage": {},
                        "isDeleted": {
                          "type": "integer"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "createGuid": {
                          "type": "string"
                        },
                        "modifyGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "resumeParseResultGuid",
                        "resumeParse",
                        "parseStatus",
                        "targetTypeName",
                        "targetProperty",
                        "parsedValue",
                        "existingValue",
                        "existingObjectGuid",
                        "prompt",
                        "profileSectionId",
                        "processingMessage",
                        "isDeleted",
                        "createDate",
                        "modifyDate",
                        "createGuid",
                        "modifyGuid"
                      ]
                    }
                  },
                  "skills": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "resumeParseResultGuid": {
                          "type": "string"
                        },
                        "resumeParse": {
                          "type": "object",
                          "properties": {
                            "resumeParseGuid": {
                              "type": "string"
                            },
                            "subscriber": {
                              "type": "object",
                              "properties": {
                                "subscriberId": {
                                  "type": "integer"
                                },
                                "subscriberGuid": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "type": "string"
                                },
                                "lastName": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "isVerified": {
                                  "type": "boolean"
                                },
                                "dateOfBirth": {},
                                "phoneNumber": {
                                  "type": "string"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "genderId": {},
                                "educationLevelId": {},
                                "profileImage": {},
                                "city": {
                                  "type": "string"
                                },
                                "postalCode": {
                                  "type": "string"
                                },
                                "linkedInUrl": {},
                                "facebookUrl": {},
                                "twitterUrl": {},
                                "stackOverflowUrl": {},
                                "githubUrl": {},
                                "hasOnboarded": {
                                  "type": "integer"
                                },
                                "state": {},
                                "enrollments": {
                                  "type": "array"
                                },
                                "skills": {
                                  "type": "array"
                                },
                                "workHistory": {
                                  "type": "array"
                                },
                                "educationHistory": {
                                  "type": "array"
                                },
                                "files": {
                                  "type": "array"
                                },
                                "eligibleCampaigns": {
                                  "type": "array"
                                },
                                "notifications": {
                                  "type": "array"
                                },
                                "notificationEmailsEnabled": {
                                  "type": "boolean"
                                },
                                "campaignOffer": {},
                                "hasVerificationEmail": {
                                  "type": "boolean"
                                },
                                "linkedInSyncDate": {
                                  "type": "string"
                                },
                                "linkedInAvatarUrl": {
                                  "type": "string"
                                },
                                "avatarUrl": {
                                  "type": "string"
                                },
                                "cloudTalentUri": {
                                  "type": "string"
                                },
                                "cloudTalentIndexStatus": {
                                  "type": "integer"
                                },
                                "cloudTalentIndexInfo": {
                                  "type": "string"
                                },
                                "isDeleted": {
                                  "type": "integer"
                                },
                                "createDate": {
                                  "type": "string"
                                },
                                "modifyDate": {
                                  "type": "string"
                                },
                                "createGuid": {
                                  "type": "string"
                                },
                                "modifyGuid": {
                                  "type": "string"
                                }
                              }
                            },
                            "subscriberFile": {},
                            "parseStatus": {
                              "type": "integer"
                            },
                            "requiresMerge": {
                              "type": "integer"
                            },
                            "resumeParseResults": {}
                          }
                        },
                        "parseStatus": {
                          "type": "integer"
                        },
                        "targetTypeName": {
                          "type": "string"
                        },
                        "targetProperty": {
                          "type": "string"
                        },
                        "parsedValue": {
                          "type": "string"
                        },
                        "existingValue": {
                          "type": "string"
                        },
                        "existingObjectGuid": {
                          "type": "string"
                        },
                        "prompt": {
                          "type": "string"
                        },
                        "profileSectionId": {
                          "type": "integer"
                        },
                        "processingMessage": {},
                        "isDeleted": {
                          "type": "integer"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "createGuid": {
                          "type": "string"
                        },
                        "modifyGuid": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "resumeParseResultGuid",
                        "resumeParse",
                        "parseStatus",
                        "targetTypeName",
                        "targetProperty",
                        "parsedValue",
                        "existingValue",
                        "existingObjectGuid",
                        "prompt",
                        "profileSectionId",
                        "processingMessage",
                        "isDeleted",
                        "createDate",
                        "modifyDate",
                        "createGuid",
                        "modifyGuid"
                      ]
                    }
                  },
                  "resumeParseGuid": {
                    "type": "string"
                  }
                }
              },
              "Talent Search Result": {
                "type": "object",
                "properties": {
                  "requestId": {},
                  "clientEventId": {},
                  "pageSize": {
                    "type": "integer"
                  },
                  "pageNum": {
                    "type": "integer"
                  },
                  "profileCount": {
                    "type": "integer"
                  },
                  "totalHits": {
                    "type": "integer"
                  },
                  "numPages": {
                    "type": "integer"
                  },
                  "info": {
                    "type": "string"
                  },
                  "searchTimeInMilliseconds": {
                    "type": "number"
                  },
                  "searchQueryTimeInTicks": {
                    "type": "integer"
                  },
                  "searchMappingTimeInTicks": {
                    "type": "integer"
                  },
                  "profiles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subscriberGuid": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phoneNumber": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "stateCode": {
                          "type": "string"
                        },
                        "postalCode": {
                          "type": "string"
                        },
                        "cloudTalentUri": {
                          "type": "string"
                        },
                        "cloudIdentifier": {
                          "type": "string"
                        },
                        "createDate": {
                          "type": "string"
                        },
                        "modifyDate": {
                          "type": "string"
                        },
                        "sourcePartner": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "skills": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "skillGuid": {},
                              "skillName": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "skillGuid",
                              "skillName"
                            ]
                          }
                        },
                        "workHistory": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "subscriberWorkHistoryId": {
                                "type": "integer"
                              },
                              "subscriberWorkHistoryGuid": {
                                "type": "string"
                              },
                              "startDate": {},
                              "endDate": {},
                              "isCurrent": {
                                "type": "integer"
                              },
                              "title": {
                                "type": "string"
                              },
                              "jobDescription": {
                                "type": "string"
                              },
                              "compensation": {
                                "type": "integer"
                              },
                              "compensationType": {},
                              "compensationTypeGuid": {
                                "type": "string"
                              },
                              "company": {
                                "type": "string"
                              },
                              "isDeleted": {
                                "type": "integer"
                              },
                              "createDate": {
                                "type": "string"
                              },
                              "modifyDate": {},
                              "createGuid": {
                                "type": "string"
                              },
                              "modifyGuid": {}
                            },
                            "required": [
                              "subscriberWorkHistoryId",
                              "subscriberWorkHistoryGuid",
                              "startDate",
                              "endDate",
                              "isCurrent",
                              "title",
                              "jobDescription",
                              "compensation",
                              "compensationType",
                              "compensationTypeGuid",
                              "company",
                              "isDeleted",
                              "createDate",
                              "modifyDate",
                              "createGuid",
                              "modifyGuid"
                            ]
                          }
                        },
                        "educationHistory": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "subscriberEducationHistoryId": {
                                "type": "integer"
                              },
                              "subscriberEducationHistoryGuid": {
                                "type": "string"
                              },
                              "educationalInstitution": {
                                "type": "string"
                              },
                              "startDate": {
                                "type": "string"
                              },
                              "endDate": {},
                              "degreeDate": {},
                              "educationalDegreeType": {
                                "type": "string"
                              },
                              "educationalDegree": {
                                "type": "string"
                              },
                              "isDeleted": {
                                "type": "integer"
                              },
                              "createDate": {
                                "type": "string"
                              },
                              "modifyDate": {},
                              "createGuid": {
                                "type": "string"
                              },
                              "modifyGuid": {}
                            },
                            "required": [
                              "subscriberEducationHistoryId",
                              "subscriberEducationHistoryGuid",
                              "educationalInstitution",
                              "startDate",
                              "endDate",
                              "degreeDate",
                              "educationalDegreeType",
                              "educationalDegree",
                              "isDeleted",
                              "createDate",
                              "modifyDate",
                              "createGuid",
                              "modifyGuid"
                            ]
                          }
                        }
                      },
                      "required": [
                        "subscriberGuid",
                        "firstName",
                        "lastName",
                        "email",
                        "phoneNumber",
                        "address",
                        "city",
                        "stateCode",
                        "postalCode",
                        "cloudTalentUri",
                        "cloudIdentifier",
                        "createDate",
                        "modifyDate",
                        "sourcePartner",
                        "skills",
                        "workHistory",
                        "educationHistory"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/1568048068575')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get the blog's author slugs",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "\n {  \"jon-foley\",\n    \"Jo Lene\",\n    \"Mike Mcster\"}\n",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - Author Slugs",
        "method": "GET",
        "urlTemplate": "/blog/author-slugs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e294ae2ce76a26cfb954')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7e294ae2ce76a26cfb954-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e294ae2ce76a26cfb954/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7e294ae2ce76a26cfb954')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get the blog's category slugs",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": []
          }
        ],
        "displayName": "Blog - Category Slugs",
        "method": "GET",
        "urlTemplate": "/blog/category-slugs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e3e2875648d39d38e0c2')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7e3e2875648d39d38e0c2-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e3e2875648d39d38e0c2/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7e3e2875648d39d38e0c2')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "slug",
            "description": "The slug of the blog detail to retreive",
            "type": "string ",
            "required": true,
            "values": []
          }
        ],
        "description": "Get the blog's author slugs",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "\n {  \"jon-foley\",\n    \"Jo Lene\",\n    \"Mike Mcster\"}\n",
               "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - Detail By Slug",
        "method": "GET",
        "urlTemplate": "/blog/slug/{slug}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7bf6fd1cec0e410c504b')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5def7bf6fd1cec0e410c504b-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7bf6fd1cec0e410c504b/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5def7bf6fd1cec0e410c504b')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "page",
            "description": "Page number of blog ",
            "type": "int",
            "required": true,
            "values": []
          }
        ],
        "description": "Get the blog's author slugs",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [
            {
              "name": "pagesize",
              "description": "The number of blogs per page",
              "type": "int",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "\n {  \"jon-foley\",\n    \"Jo Lene\",\n    \"Mike Mcster\"}\n",
               "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - List",
        "method": "GET",
        "urlTemplate": "/blog/page/{page}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7b1f2240e6f989a1bf14')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5def7b1f2240e6f989a1bf14-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7b1f2240e6f989a1bf14/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5def7b1f2240e6f989a1bf14')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "author",
            "description": "Name of blog author used to retrieve blogs ",
            "type": "string ",
            "required": true,
            "values": []
          }
        ],
        "description": "Get a list of blogs by category",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "\n {  \"jon-foley\",\n    \"Jo Lene\",\n    \"Mike Mcster\"}\n",
               "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - List By Author",
        "method": "GET",
        "urlTemplate": "/blog/author/{author}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7f1a75bc6211421e7464')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5def7f1a75bc6211421e7464-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7f1a75bc6211421e7464/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5def7f1a75bc6211421e7464')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "category",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Get a list of blogs by category",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
               "sample": "\n {  \"jon-foley\",\n    \"Jo Lene\",\n    \"Mike Mcster\"}\n",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - List By Category",
        "method": "GET",
        "urlTemplate": "/blog/category/{category}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7e434a67f5012a1f0d1e')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5def7e434a67f5012a1f0d1e-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7e434a67f5012a1f0d1e/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5def7e434a67f5012a1f0d1e')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "tag",
            "description": "Tag to query blogs by",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get the blog's author slugs",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
               "sample": "\n {  \"jon-foley\",\n    \"Jo Lene\",\n    \"Mike Mcster\"}\n",
               "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - List By Tag",
        "method": "GET",
        "urlTemplate": "/blog/tag/{tag}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7d573dd50f00c6b9574d')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5def7d573dd50f00c6b9574d-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7d573dd50f00c6b9574d/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5def7d573dd50f00c6b9574d')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get the blog's count of pages ",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "text/html",
                "sample": "\"2\"",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - Page Count",
        "method": "GET",
        "urlTemplate": "/blog/page-count"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e62578adc3eb2c338aef')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7e62578adc3eb2c338aef-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e62578adc3eb2c338aef/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7e62578adc3eb2c338aef')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get the blog's author slugs",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [
            {
              "name": "query",
              "description": "Query term to search blogs with",
              "type": "string ",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
               "sample": "\n {  \"jon-foley\",\n    \"Jo Lene\",\n    \"Mike Mcster\"}\n",
               "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - Query",
        "method": "GET",
        "urlTemplate": "/blog/search"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7c9fe02f2af793fa7bff')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5def7c9fe02f2af793fa7bff-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5def7c9fe02f2af793fa7bff/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5def7c9fe02f2af793fa7bff')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get the blog's site map",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n    \"?xml\": {\n        \"@version\": \"1.0\",\n        \"@encoding\": \"UTF-8\"\n    },\n    \"urlset\": {\n        \"@xmlns\": \"http://www.sitemaps.org/schemas/sitemap/0.9\",\n        \"@xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n        \"@xsi:schemaLocation\": \"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\",\n        \"url\": [\n            {\n                \"loc\": \"http://localhost:5000/blog/post/hey-a-test-post\"\n            },\n            {\n                \"loc\": \"http://localhost:5000/blog/post/ians-test-blog-post\"\n            }\n        ]\n    }\n}",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Blog - Sitemap",
        "method": "GET",
        "urlTemplate": "/blog/site-map"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e05f8f5dc9390b5554e9')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7e05f8f5dc9390b5554e9-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e05f8f5dc9390b5554e9/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7e05f8f5dc9390b5554e9')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get the blog's tag slugs",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": []
          }
        ],
        "displayName": "Blog - Tag Slugs",
        "method": "GET",
        "urlTemplate": "/blog/tag-slugs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e53a2ebcaaacffc1533c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7e53a2ebcaaacffc1533c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7e53a2ebcaaacffc1533c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7e53a2ebcaaacffc1533c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "key",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Clears an item in the Butter CMS page from cache",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Butter Cache - Clear",
        "method": "PUT",
        "urlTemplate": "/butter/cache/clear/{key}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d84b66ddabcad2bd627b')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7d84b66ddabcad2bd627b-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d84b66ddabcad2bd627b/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7d84b66ddabcad2bd627b')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "pageslug",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Clears a Butter CMS page from cache",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": " ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          }
        ],
        "displayName": "Butter Cache - Clear Page",
        "method": "PUT",
        "urlTemplate": "/butter/cache/page/clear/{pageslug}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d6c395b22e1acb836073')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7d6c395b22e1acb836073-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d6c395b22e1acb836073/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7d6c395b22e1acb836073')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a content field from Butter cms.  Requires the following to be passed in the body:\n{\n\t\"keys\" : [\"careercircle_public_site_navigation\" ],\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \t\t\n\t}\t        \t\n}",
        "request": {
          "description": "{\n\t\"keys\" : [\"careercircle_public_site_navigation\" ],\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\n\t}\t       \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a company.",
            "headers": []
          },
          {
            "statusCode": 404,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Butter Content Field - Detail",
        "method": "PUT",
        "urlTemplate": "/butter/content-field"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d26386052a74e04a7207')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7d26386052a74e04a7207-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d26386052a74e04a7207/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7d26386052a74e04a7207')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a page  from Butter cms.  Requires the following to be passed in the body:\n{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t}\n}",
        "request": {
          "description": "{\n\t\"url\" : \"traitify\" ,\n\t\"queryParameters\" : {\n\t\t\"levels\" : \"4\" \n\t\t\n\t}\n\t      \n}",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a company.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n    \"data\": {\n        \"slug\": \"traitify\",\n        \"fields\": {\n            \"partner\": {\n                \"description\": \"World's fastest personality assessment. Scientifically-backed and user-focused. Designed to quickly and accurately collect personality data.\",\n                \"name\": \"Traitify\",\n                \"guid\": \"692B5E6C-140B-4F2E-BD06-4C03BA40AD6A\"\n            },\n            \"title\": \"CareerCircle Personality Assessment\",\n            \"meta_description\": \"Free personality assessment using Traitify\",\n            \"meta_keywords\": \"traitify personality assessment career \",\n            \"ogtitle\": \"Traitify Personality Assessment\",\n            \"ogdescription\": \"A page containing access to Traitify personality assessment \",\n            \"ogimage\": \"https://cdn.buttercms.com/uzUA3xukRTeWTIj9euET\",\n            \"hero_header\": \"Take our personality assessment\",\n            \"hero_image\": \"https://cdn.buttercms.com/uzUA3xukRTeWTIj9euET\",\n            \"hero_description\": \"<p><iframe width=\\\"640\\\" height=\\\"360\\\" src=\\\"https://player.vimeo.com/video/369366274\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"allowfullscreen\\\"></iframe> What seems like magic is just good science. Your brain processes images 60,000 times faster than words! So we're introducing an image-based test powered by Traitify that collects hundreds of personality data points 30x faster than comparable assessments, and via mobile phone&ndash;in 90 seconds. All without compromising reliability and validity.</p>\",\n            \"modal_header\": \"Thank you!\",\n            \"modal_text\": \"<p>Thank you for completing the assessment! The results will be emailed to you. You will need to verify your email before logging in for the first time.</p>\",\n            \"form_header\": \"Enter your info to get started\",\n            \"form_text\": \"We will not share this information with anyone. \",\n            \"form_submit_button_text\": \"Start the assessment \",\n            \"existing_user_submit_button_text\": \"Click here to begin the assessment\",\n            \"signup_form_image_banner\": \"https://cdn.buttercms.com/l6Bd0dElSdqYDy7G86PH\",\n            \"signup_form_header\": \"Enter a password\",\n            \"signup_form_text\": \"This is where to enter password\",\n            \"signup_form_submit_button_text\": \"Click here to sign up!\",\n            \"signup_hero_title\": \"Sign up for a CareerCircle account to get your full result!\",\n            \"signup_hero_content\": \"<p>Get connected with courses that match your personality!</p>\",\n            \"result_footer_text\": \"<p>Create an account to get your full results today!&nbsp;</p>\\n<p><a href=\\\"#top\\\">Jump to top of page</a></p>\"\n        }\n    }\n}",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Butter Page - Detail",
        "method": "PUT",
        "urlTemplate": "/butter/page"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d48411486090b27be4a5')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de7d48411486090b27be4a5-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de7d48411486090b27be4a5/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de7d48411486090b27be4a5')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "topic",
            "description": "This is a unique identifier for a career path",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "This returns list of possible career paths ",
        "request": {
          "description": "Request Payload",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The response represents the recommended courses a subscriber should enroll in based on the their skills.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "Server cannot or will not process the request due to something that is perceived to be a client error.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Career Path - Courses",
        "method": "GET",
        "urlTemplate": "/careerpath/{topic}/courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de80ee637c6219594f37da7')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de80ee637c6219594f37da7-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de80ee637c6219594f37da7/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de80ee637c6219594f37da7')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "topic",
            "description": "This is a unique identifier for a career path",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns skills that can be gained through a career path",
        "request": {
          "description": "Request Payload",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n    \"company\" : \"Allegis Group\",\n    \"startDate\" : \"9/1/2018\",\n    \"endDate\" : null,\n    \"jobTitle\": \"Senior Software Engineer\",\n    \"jobDescription\" : \"Lead team of developers\",\n    \"rate\" : 60.25,\n    \"compensationTypeGuid\" : \"f3061c0f-41ee-4bb1-b655-328f22653ef3\",\n    \"isCurrent\": true\n}",
              "schemaId": "1568048068575",
              "typeName": ""
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The response represents the recommended courses a subscriber should enroll in based on the their skills.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "Server cannot or will not process the request due to something that is perceived to be a client error.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Career Path - Detail",
        "method": "GET",
        "urlTemplate": "/careerpath/{topic}/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5ded128f25419890b3234638')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5ded128f25419890b3234638-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5ded128f25419890b3234638/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5ded128f25419890b3234638')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "This returns list of possible career paths ",
        "request": {
          "description": "Request Payload",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n    \"company\" : \"Allegis Group\",\n    \"startDate\" : \"9/1/2018\",\n    \"endDate\" : null,\n    \"jobTitle\": \"Senior Software Engineer\",\n    \"jobDescription\" : \"Lead team of developers\",\n    \"rate\" : 60.25,\n    \"compensationTypeGuid\" : \"f3061c0f-41ee-4bb1-b655-328f22653ef3\",\n    \"isCurrent\": true\n}",
              "schemaId": "1568048068575",
              "typeName": ""
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The response represents the recommended courses a subscriber should enroll in based on the their skills.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "Server cannot or will not process the request due to something that is perceived to be a client error.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Career Path - List",
        "method": "GET",
        "urlTemplate": "/careerpath/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa219d30fa434b8b5d664')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7aa219d30fa434b8b5d664-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa219d30fa434b8b5d664/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aa219d30fa434b8b5d664')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa219d30fa434b8b5d664/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aa219d30fa434b8b5d664')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa219d30fa434b8b5d664/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aa219d30fa434b8b5d664')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "topic",
            "description": "This is a unique identifier for a career path",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns skills that can be gained through a career path",
        "request": {
          "description": "Request Payload",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n    \"company\" : \"Allegis Group\",\n    \"startDate\" : \"9/1/2018\",\n    \"endDate\" : null,\n    \"jobTitle\": \"Senior Software Engineer\",\n    \"jobDescription\" : \"Lead team of developers\",\n    \"rate\" : 60.25,\n    \"compensationTypeGuid\" : \"f3061c0f-41ee-4bb1-b655-328f22653ef3\",\n    \"isCurrent\": true\n}",
              "schemaId": "1568048068575",
              "typeName": ""
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The response represents the recommended courses a subscriber should enroll in based on the their skills.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "Server cannot or will not process the request due to something that is perceived to be a client error.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Career Path - Skills",
        "method": "GET",
        "urlTemplate": "/careerpath/{topic}/skills"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de80f7472be6b1cabc21866')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de80f7472be6b1cabc21866-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de80f7472be6b1cabc21866/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de80f7472be6b1cabc21866')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves all companies. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": " [{\n        \"companyGuid\": \"b0eb0b98-2a67-4581-abc4-d5d8c1d71060\",\n        \"companyName\": \"Test Group\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    },\n    {\n        \"companyGuid\": \"4cd09e0a-fcec-4a05-a791-d91acb5906da\",\n        \"companyName\": \"Test Name\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 1,\n        \"isJobPoster\": 1\n    },\n    {\n        \"companyGuid\": \"f240a4f5-890d-4abd-9e40-57ffd0c93564\",\n        \"companyName\": \"wells fargo\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    },\n    {\n        \"companyGuid\": \"b7bae821-9991-484a-969a-883ef72a7879\",\n        \"companyName\": \"united healthcare\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    },\n    {\n        \"companyGuid\": \"800fc2e8-be14-4571-b68b-8cd150132407\",\n        \"companyName\": \"edaptive systems\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    }]",
                "schemaId": "1568048068575",
                "typeName": "Company List"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Company - All",
        "method": "GET",
        "urlTemplate": "/companies/all"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0b93a9cc940451356f2bdf')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5e0b93a9cc940451356f2bdf-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0b93a9cc940451356f2bdf/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5e0b93a9cc940451356f2bdf')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a company.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{   \n\t\"isHiringAgency\": 1,\n\t\"companyName\": \"Allegis Group\",\n\t\"isJobPoster\": 1,\n\t\"logoUrl\": \"92728544-FDFD-493F-A7D3-5547DEA7B9DD/allegisgroup.png\"\n}",
              "schemaId": "1568048068575",
              "typeName": "Company"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Company - Create",
        "method": "POST",
        "urlTemplate": "/companies"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-create')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/company-create-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-create/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-create')]"
      ]
    },
    {
      "properties": {
        "displayName": "Companies"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-create/companies')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-create')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "company",
            "description": "This is a unique identifier for a company.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes a company.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Company - Delete",
        "method": "DELETE",
        "urlTemplate": "/companies/{company}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-delete')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/company-delete-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-delete/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-delete')]"
      ]
    },
    {
      "properties": {
        "displayName": "Companies"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-delete/companies')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-delete')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "company",
            "description": "This is a unique identifier for a company.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific company.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a company.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n\t \"companyGuid\": \"f240a4f5-890d-4abd-9e40-57ffd0c93564\",\n    \"companyName\": \"wells fargo\",\n    \"jobPageBoilerplate\": null,\n    \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n    \"isHiringAgency\": 0,\n    \"isJobPoster\": 0\n}",
                "schemaId": "1568048068575",
                "typeName": "Company"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Company - Detail",
        "method": "GET",
        "urlTemplate": "/companies/{company}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/company-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company')]"
      ]
    },
    {
      "properties": {
        "displayName": "Companies"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company/companies')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of companies. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": " [{\n        \"companyGuid\": \"b0eb0b98-2a67-4581-abc4-d5d8c1d71060\",\n        \"companyName\": \"Test Group\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    },\n    {\n        \"companyGuid\": \"4cd09e0a-fcec-4a05-a791-d91acb5906da\",\n        \"companyName\": \"Test Name\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 1,\n        \"isJobPoster\": 1\n    },\n    {\n        \"companyGuid\": \"f240a4f5-890d-4abd-9e40-57ffd0c93564\",\n        \"companyName\": \"wells fargo\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    },\n    {\n        \"companyGuid\": \"b7bae821-9991-484a-969a-883ef72a7879\",\n        \"companyName\": \"united healthcare\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    },\n    {\n        \"companyGuid\": \"800fc2e8-be14-4571-b68b-8cd150132407\",\n        \"companyName\": \"edaptive systems\",\n        \"jobPageBoilerplate\": null,\n        \"logoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Company/\",\n        \"isHiringAgency\": 0,\n        \"isJobPoster\": 0\n    }]",
                "schemaId": "1568048068575",
                "typeName": "Company List"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Company - List",
        "method": "GET",
        "urlTemplate": "/companies"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-list')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/company-list-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-list/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-list')]"
      ]
    },
    {
      "properties": {
        "displayName": "Companies"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-list/companies')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-list')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "company",
            "description": "This is a unique identifier for a company.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific company.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\t\"isHiringAgency\": true,\n\t\"companyName\": \"Allegis Group\",\n\t\"isJobPoster\": true\n}",
              "schemaId": "1568048068575",
              "typeName": "Company"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Company - Update",
        "method": "PUT",
        "urlTemplate": "/companies/{company}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-update')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/company-update-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-update/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-update')]"
      ]
    },
    {
      "properties": {
        "displayName": "Companies"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/company-update/companies')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'company-update')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a compensation type.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\t\"compensationTypeName\" : \"Monthly\"\n}",
              "schemaId": "1568048068575",
              "typeName": "Compensation Type"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Compensation Type - Create",
        "method": "POST",
        "urlTemplate": "/compensation-types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be08b4bf47c623fd724cb')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be08b4bf47c623fd724cb-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be08b4bf47c623fd724cb/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be08b4bf47c623fd724cb')]"
      ]
    },
    {
      "properties": {
        "displayName": "Compensation Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be08b4bf47c623fd724cb/compensation-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be08b4bf47c623fd724cb')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "compensationType",
            "description": "This is a unique identifier for a compensation type.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes a compensation type.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Compensation Type - Delete",
        "method": "DELETE",
        "urlTemplate": "/compensation-types/{compensationType}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be088c583312df57c9369')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be088c583312df57c9369-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be088c583312df57c9369/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be088c583312df57c9369')]"
      ]
    },
    {
      "properties": {
        "displayName": "Compensation Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be088c583312df57c9369/compensation-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be088c583312df57c9369')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "compensationType",
            "description": "This is a unique identifier for a compensation type.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific compensation type.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a company.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n\t\"compensationTypeName\" : \"Monthly\"\n}\t",
                "schemaId": "1568048068575",
                "typeName": "Compensation Type"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Compensation Type - Detail",
        "method": "GET",
        "urlTemplate": "/compensation-types/{compensationType}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be085e9c75b062cf31941')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be085e9c75b062cf31941-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be085e9c75b062cf31941/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be085e9c75b062cf31941')]"
      ]
    },
    {
      "properties": {
        "displayName": "Compensation Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be085e9c75b062cf31941/compensation-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be085e9c75b062cf31941')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of compensation types. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of compensation types.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Compensation Type - List",
        "method": "GET",
        "urlTemplate": "/compensation-types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be0820f8063d8892821d3')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be0820f8063d8892821d3-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be0820f8063d8892821d3/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be0820f8063d8892821d3')]"
      ]
    },
    {
      "properties": {
        "displayName": "Compensation Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be0820f8063d8892821d3/compensation-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be0820f8063d8892821d3')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "compensationType",
            "description": "This is the unique identifier for compensation type",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific compensation type.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\t\"compensationTypeName\" : \"Annual\"\n}",
              "schemaId": "1568048068575",
              "typeName": "Compensation Type"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Compensation Type - Update",
        "method": "PUT",
        "urlTemplate": "/compensation-types/{compensationType}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be07dab3be2310b7f518a')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be07dab3be2310b7f518a-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be07dab3be2310b7f518a/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be07dab3be2310b7f518a')]"
      ]
    },
    {
      "properties": {
        "displayName": "Compensation Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be07dab3be2310b7f518a/compensation-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be07dab3be2310b7f518a')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a collection of contact types.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Contact types for the contact us page. ",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Contact Types - List",
        "method": "GET",
        "urlTemplate": "/contacts/types/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7b989f167c430622356787')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7b989f167c430622356787-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7b989f167c430622356787/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7b989f167c430622356787')]"
      ]
    },
    {
      "properties": {
        "displayName": "Contacts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7b989f167c430622356787/contacts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7b989f167c430622356787')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a new resource based on the Hire Talent page. ",
        "request": {
          "description": "The request payload. Note the  contactType property refers to the guid based off the GET request.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\"companyName\":\"Test company\",\n\"firstName\":\"Joe\",\n\"lastName\":\"Doe\",\n\"title\":\"This is a test title\",\n\"email\":\"jyotiguin1@gmail.com\",\n\"phone\":\"443 849 2832\",\n\"pipeline\":\"This is a test pipeline\",\n\"skillSet\":\"C#\",\n\"location\":\"Baltimore, MD\",\n\"comments\":\"Hey checkout this job\"\n}",
              "schemaId": "1568048068575",
              "typeName": "Contact Us (Create)"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Contact Us - Create",
        "method": "POST",
        "urlTemplate": "/contacts/hire-talent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dfa7924be141041845752d5')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5dfa7924be141041845752d5-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dfa7924be141041845752d5/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dfa7924be141041845752d5')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a new resource based on the Contact Us page. ",
        "request": {
          "description": "The request payload. Note the  contactType property refers to the guid based off the GET request.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n  \"firstName\":\" Bobby\",\n  \"lastName\" : \"Smith\",\n  \"email\" : \"bsmith@hello.com\",\n  \"contactType\" : \"General\",\n  \"message\" : \"Hi, I am inquering about the possible job oppertunity in Florida. Please reach me at 882-223-2323 \"\n}",
              "schemaId": "1568048068575",
              "typeName": "Contact Us (Create)"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Contact Us - Create",
        "method": "POST",
        "urlTemplate": "/contacts/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7b9a5948ca65e876175d7a')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7b9a5948ca65e876175d7a-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7b9a5948ca65e876175d7a/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7b9a5948ca65e876175d7a')]"
      ]
    },
    {
      "properties": {
        "displayName": "Contacts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7b9a5948ca65e876175d7a/contacts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7b9a5948ca65e876175d7a')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a country.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\t\"displayName\" : \"Congo\",\n\t\"officialName\" : \"Congo - Brazzaville\",\n\t\"sequence\" : 53,\n\t\"code2\" : \"CG\",\n\t\"code3\" : \"COG\"\n}",
              "schemaId": "1568048068575",
              "typeName": "Country"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Country - Create",
        "method": "POST",
        "urlTemplate": "/countries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9c2c2c45c6b5eedd72c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba9c2c2c45c6b5eedd72c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9c2c2c45c6b5eedd72c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9c2c2c45c6b5eedd72c')]"
      ]
    },
    {
      "properties": {
        "displayName": "Countries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9c2c2c45c6b5eedd72c/countries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9c2c2c45c6b5eedd72c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "country",
            "description": "This is a unique identifier for a country.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes a country.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Country - Delete",
        "method": "DELETE",
        "urlTemplate": "/countries/{country}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9bfc29ba2db8087892d')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba9bfc29ba2db8087892d-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9bfc29ba2db8087892d/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9bfc29ba2db8087892d')]"
      ]
    },
    {
      "properties": {
        "displayName": "Countries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9bfc29ba2db8087892d/countries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9bfc29ba2db8087892d')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "country",
            "description": "This is a unique identifier for country.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific country.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a company.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n\t\"displayName\" : \"Congo\",\n\t\"officialName\" : \"Congo - Brazzaville\",\n\t\"sequence\" : 53,\n\t\"code2\" : \"CG\",\n\t\"code3\" : \"COG\"\n}",
                "schemaId": "1568048068575",
                "typeName": "Country"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Country - Detail",
        "method": "GET",
        "urlTemplate": "/countries/{country}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9bb9ad39f0a2733287c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba9bb9ad39f0a2733287c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9bb9ad39f0a2733287c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9bb9ad39f0a2733287c')]"
      ]
    },
    {
      "properties": {
        "displayName": "Countries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9bb9ad39f0a2733287c/countries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9bb9ad39f0a2733287c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of countries. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of countries.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Country - List",
        "method": "GET",
        "urlTemplate": "/countries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9b648af2d84ad16d48a')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba9b648af2d84ad16d48a-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9b648af2d84ad16d48a/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9b648af2d84ad16d48a')]"
      ]
    },
    {
      "properties": {
        "displayName": "Countries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9b648af2d84ad16d48a/countries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9b648af2d84ad16d48a')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "country",
            "description": "This is a unique identifier for a country.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Updates a specific country.",
        "request": {
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Country - Update",
        "method": "PUT",
        "urlTemplate": "/countries/{country}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9accadeb375134c854f')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba9accadeb375134c854f-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9accadeb375134c854f/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9accadeb375134c854f')]"
      ]
    },
    {
      "properties": {
        "displayName": "Countries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba9accadeb375134c854f/countries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba9accadeb375134c854f')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves the total number of available courses",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The response contains detail pertaining to a course.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "25",
                "schemaId": "1568048068575",
                "typeName": "Course - Detail"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course - Count",
        "method": "GET",
        "urlTemplate": "/courses/count"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5decfcda8d2fc7705daf0542')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5decfcda8d2fc7705daf0542-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5decfcda8d2fc7705daf0542/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5decfcda8d2fc7705daf0542')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5decfcda8d2fc7705daf0542/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5decfcda8d2fc7705daf0542')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "description": "This is a unique identifier for a course",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves course details.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The response contains detail pertaining to a course.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course - Detail  ",
        "method": "GET",
        "urlTemplate": "/courses/{course}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d826a794cf4c57b8262276d')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d826a794cf4c57b8262276d-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d826a794cf4c57b8262276d/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d826a794cf4c57b8262276d')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d826a794cf4c57b8262276d/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d826a794cf4c57b8262276d')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a collection of courses. ",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": true,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": true,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": true,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": true,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course - List ",
        "method": "GET",
        "urlTemplate": "/courses/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d8298c5da978366d4e6ff8f')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d8298c5da978366d4e6ff8f-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d8298c5da978366d4e6ff8f/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d8298c5da978366d4e6ff8f')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d8298c5da978366d4e6ff8f/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d8298c5da978366d4e6ff8f')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "description": "The course guid for the course",
            "type": "guid",
            "required": true,
            "values": []
          },
          {
            "name": "courseVariant",
            "description": "this is a unique identifier for a course variant",
            "type": "guid",
            "required": true,
            "values": []
          },
          {
            "name": "promoCode",
            "description": "The promotional code to be redeemed",
            "type": "string ",
            "required": true,
            "values": []
          }
        ],
        "description": "This endpoint validates that a promo code applied to a specific course variant (self paced vs instructor-led). ",
        "request": {
          "queryParameters": [
            {
              "name": "promocode",
              "description": "this is the promo code",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This response contains the name and discount amount for the promo code. ",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n      \"promoCodeGuid\": \"0e261c60-7f3c-4b57-8475-ae5fffa14070\",\n      \"name\": \"Woz Promo\",\n      \"discountAmount\": \"100.00\"\n    }",
                "schemaId": "1568048068575",
                "typeName": "Promo Code"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 204,
            "description": "This response represents the promo code cannot be applied to the course variant.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course - PromoCode",
        "method": "GET",
        "urlTemplate": "/courses/{course}/variant/{courseVariant}/promocodes/{promoCode}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82e4246f9f4c8484df0c29')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d82e4246f9f4c8484df0c29-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82e4246f9f4c8484df0c29/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82e4246f9f4c8484df0c29')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82e4246f9f4c8484df0c29/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82e4246f9f4c8484df0c29')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Sends an email notification for a course from a logged-in user.",
        "request": {
          "description": "The body of the message contains all of the information required to create a course referral - the subscriber that will be associated with the sender comes from the JWT submitted with the request.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\t\"courseGuid\": \"f20f34ae-e73e-4e8d-aa79-a0969183a0a8\",\n\t\"referralEmail\": \"joesmith@mail.com\",\n\t\"referralName\": \"Joe Smith\",\n\t\"referralDescription\": \"Check out this awesome course!\"\n}",
              "schemaId": "1568048068575",
              "typeName": "Course - Refer A Friend"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course - Refer A Friend",
        "method": "POST",
        "urlTemplate": "/courses/refer"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de91265c4ec0def6912d700')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de91265c4ec0def6912d700-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de91265c4ec0def6912d700/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de91265c4ec0def6912d700')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de91265c4ec0def6912d700/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de91265c4ec0def6912d700')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "description": "Guid of the course to enroll in",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Creates a enrollment for a course",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\n   \"nonce\" : \"This comes from a braintree call on the frontend\",\n   \"pricePaid\" : 45.5,\n   \"paymentAmount\" : 45.5,\n   \"firstName\": \"Jim\",\n   \"lastName\" : \"Braazil\",\n   \"phoneNumber\" : \"454545\",\n   \"email\": \"info.x.com\",\n   \"address\": \"5600 main street\",\n   \"region\": \"md\",\n   \"locality\": \"Towson\",\n   \"zipCode\": \"21204\",\n   \"countryCode\": \"us\",\n   \"merchantAccountId\": \"This a front end app setting\",\n   \"stateGuid\": \"8823f7f7-ecc2-4fe3-8461-79fdcb6873cc\",\n   \"countryGuid\": \"8b5dec9a-b5cf-4bdc-b015-ccfd4339d32b\",\n   \"courseGuid\": \"f0221f28-9104-45ec-b453-297afe9f4899\",\n   \"courseVariantGuid\": \"905D0B98-59FA-4857-813F-9136E57B1FE4\",\n   \"subscriberGuid\": \"71a7156e-173f-4054-83ed-ad6127bafe87\"\n}\n\n",
              "schemaId": "1568048068575",
              "typeName": "Course - Enroll"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 200,
            "description": "Returns the guid of the new course enrollment ",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Enroll - Create",
        "method": "POST",
        "urlTemplate": "/courses/{course}/enroll"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82df129165390fd13689b7')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d82df129165390fd13689b7-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82df129165390fd13689b7/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82df129165390fd13689b7')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82df129165390fd13689b7/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82df129165390fd13689b7')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "description": "Guid of the course to return",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a details for a course enrollment. The user must be authorized in order to call make a request to this operation. ",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This response contains details pertaining to a course.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Enroll - Detail",
        "method": "GET",
        "urlTemplate": "/courses/{course}/enroll"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d83887994d071d6b9d6f8c0')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d83887994d071d6b9d6f8c0-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d83887994d071d6b9d6f8c0/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d83887994d071d6b9d6f8c0')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d83887994d071d6b9d6f8c0/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d83887994d071d6b9d6f8c0')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "description": "This is the unique identifier for course",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns true or false indicating if the subscriber has favorited a particular course",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "true",
                "schemaId": "1568048068575",
                "typeName": "Job Favorite List"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Favorite - Check",
        "method": "GET",
        "urlTemplate": "/courses/{course}/favorites/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd461ccd29a13c0a4fd8d07')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5dd461ccd29a13c0a4fd8d07-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd461ccd29a13c0a4fd8d07/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd461ccd29a13c0a4fd8d07')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd461ccd29a13c0a4fd8d07/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd461ccd29a13c0a4fd8d07')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Creates a course favorite for the provided course and subscriber. ",
        "request": {
          "description": "The job alert to be created",
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Favorite - Create ",
        "method": "POST",
        "urlTemplate": "/courses/{course}/favorites"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd45fda8eb7478685e4d2a9')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5dd45fda8eb7478685e4d2a9-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd45fda8eb7478685e4d2a9/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd45fda8eb7478685e4d2a9')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd45fda8eb7478685e4d2a9/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd45fda8eb7478685e4d2a9')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd45fda8eb7478685e4d2a9/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd45fda8eb7478685e4d2a9')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Performs a logical deletion for a course favorite. ",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Favorite - Delete ",
        "method": "DELETE",
        "urlTemplate": "/courses/{course}/favorites"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd4614c5b9734ff463696e6')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5dd4614c5b9734ff463696e6-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd4614c5b9734ff463696e6/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd4614c5b9734ff463696e6')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves course favorites for a specific subscriber.",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "type": "int",
              "defaultValue": "0",
              "required": true,
              "values": [
                "0"
              ]
            },
            {
              "name": "offset",
              "type": "int",
              "required": true,
              "values": [
                "10"
              ]
            },
            {
              "name": "sort",
              "type": "string",
              "required": true,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "type": "string",
              "defaultValue": "descending",
              "required": true,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Jobs that have been marked as favorites by the subscriber.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Favorite - List by Subscriber",
        "method": "GET",
        "urlTemplate": "/courses/favorites/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd46043d01b2e1e18278319')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5dd46043d01b2e1e18278319-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd46043d01b2e1e18278319/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd46043d01b2e1e18278319')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd46043d01b2e1e18278319/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd46043d01b2e1e18278319')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dd46043d01b2e1e18278319/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dd46043d01b2e1e18278319')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "courseLevel",
            "description": "This is a unique identifier for course level",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific course level.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a course level.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Level - Detail ",
        "method": "GET",
        "urlTemplate": "/course-levels/{courseLevel}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bf33d857c9338bfa0a6b4')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bf33d857c9338bfa0a6b4-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bf33d857c9338bfa0a6b4/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bf33d857c9338bfa0a6b4')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bf33d857c9338bfa0a6b4/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bf33d857c9338bfa0a6b4')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of course levels. This end point is used to populate the drop down for the level drop down in the course page.",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": true,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": true,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": true,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": true,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of course levels.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Level - List",
        "method": "GET",
        "urlTemplate": "/courses/levels/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bf32af4eceb84f6bae0dc')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bf32af4eceb84f6bae0dc-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bf32af4eceb84f6bae0dc/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bf32af4eceb84f6bae0dc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bf32af4eceb84f6bae0dc/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bf32af4eceb84f6bae0dc')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns courses related to the specified job",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of jobs to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returns active jobs that conform to the query parameters.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Random - List",
        "method": "GET",
        "urlTemplate": "/courses/random"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db2be8b7106f3d606182516')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5db2be8b7106f3d606182516-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db2be8b7106f3d606182516/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5db2be8b7106f3d606182516')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db2be8b7106f3d606182516/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5db2be8b7106f3d606182516')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns courses. Supports paging via query string parameters. ",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of jobs to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of jobs to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to ModifyDate if not specified.  The following are valid sorts: Title, Topic, Level, ModifyDate,CreateDate and VendorName",
              "type": "string",
              "defaultValue": "ModifyDate",
              "required": false,
              "values": [
                "ModifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            },
            {
              "name": "keyword",
              "description": "The keyword(s) on which to base the job search. ",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Level",
              "description": "Course level filter.  Valid values are \"Beginner\", \"Intermediate\" \n and \"Advanced\"",
              "type": "string ",
              "required": false,
              "values": []
            },
            {
              "name": "Topic",
              "description": "Course topic filter. Valid values are \n\"Data Science\",\n\"Cyber Security\"\n\"Full Stack\"\n\nNote: in stage pre-pend \"Dev\" to topic name.  e.g. \"Dev Full Stack\"",
              "type": "string ",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returns courses that conform to the query parameters.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n    \"pageSize\": 1000,\n    \"pageNum\": 1,\n    \"courseCount\": 1,\n    \"totalHits\": 1,\n    \"numPages\": 1,\n    \"searchTimeInMilliseconds\": 13965.8048,\n    \"searchQueryTimeInTicks\": 16946662,\n    \"searchMappingTimeInTicks\": 122711386,\n    \"courses\": [\n        {\n            \"title\": \"Front End Frameworks - React\",\n            \"duration\": null,\n            \"description\": \"Description:The Front End Frameworks course is an introduction to JavaScript Front End Frameworks which enable rapid front-end development meeting modern best practices. Students will learn how to create Single Page Web Applications (SPA). Framework-specific concepts will be covered, outlining the nuances associated with the elective framework (React).Objectives:Learn a framework to make front-end code more maintainableCommunicate with back-end REST servicesLearn how to manage state in an applicationLearn how to use components when building an applicationLearn how to use routing to support multiple pages within a SPA\",\n            \"numEnrollments\": 0,\n            \"vendorName\": \"WozU\",\n            \"courseGuid\": \"ec7243f5-3117-447f-a945-92835500f364\",\n            \"vendorLogoUrl\": \"https://careercirclestaging.blob.core.windows.net/assets/Vendor/00000000-0000-0000-0000-000000000001/woz.png\",\n            \"vendorGuid\": \"00000000-0000-0000-0000-000000000001\",\n            \"courseLevelGuid\": null,\n            \"code\": \"FSWG101\",\n            \"level\": \"Advanced\",\n            \"createDate\": \"2018-10-16T13:38:53.561Z\",\n            \"modifyDate\": \"2019-12-09T20:54:50.063Z\",\n            \"isDeleted\": 0,\n            \"tabletImage\": null,\n            \"desktopImage\": \"https://careercirclestaging.blob.core.windows.net/assets/Course/EC7243F5-3117-447F-A945-92835500F364/full-stack.jpg\",\n            \"mobileImage\": null,\n            \"thumbnailImage\": null,\n            \"topic\": \"Dev Full Stack\",\n            \"courseSkills\": \"react.js\\t\\t; html; json; css; restful web services; javascript; react; restful api; reactjs; single page application\"\n        }\n    ]\n}",
                "schemaId": "1568048068575",
                "typeName": ""
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Search - Query ",
        "method": "GET",
        "urlTemplate": "/courses/query"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bba822b46add8b0a99dc3')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bba822b46add8b0a99dc3-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bba822b46add8b0a99dc3/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bba822b46add8b0a99dc3')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bba822b46add8b0a99dc3/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bba822b46add8b0a99dc3')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "description": "This is a unique identifier for course",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a list of skills for a course.",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of skills.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Skill - List ",
        "method": "GET",
        "urlTemplate": "/skills/courses/{course}/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82dd2a4d55970c032e4407')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d82dd2a4d55970c032e4407-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82dd2a4d55970c032e4407/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82dd2a4d55970c032e4407')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82dd2a4d55970c032e4407/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82dd2a4d55970c032e4407')]"
      ]
    },
    {
      "properties": {
        "displayName": "Skills"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82dd2a4d55970c032e4407/skills')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82dd2a4d55970c032e4407')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a collection of course variant. They represent the varient (self paced vs instructor led) on the course page",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A collection of course variant.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Course Variant - List ",
        "method": "GET",
        "urlTemplate": "/courses/{course}/variant"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82e1d18fe58afb43dfc42b')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d82e1d18fe58afb43dfc42b-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82e1d18fe58afb43dfc42b/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82e1d18fe58afb43dfc42b')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d82e1d18fe58afb43dfc42b/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d82e1d18fe58afb43dfc42b')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "course",
            "description": "This is a unique identifier for a course",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns courses related to a course based on skill association. A valid subscriber JWT being supplied does not affect the output of this endpoint as all courses are online-based (geographic data does not influence courses).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of courses to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of courses to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "required": false,
              "values": [
                "0"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of courses that are related to the specified course.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Courses - Get Related By Course",
        "method": "GET",
        "urlTemplate": "/courses/courses/{course}/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-course')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/courses-get-related-by-course-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-course/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'courses-get-related-by-course')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-course/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'courses-get-related-by-course')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns a list of courses that are associated with the list of courses provided in the body of the HTTP request (POST).",
        "request": {
          "description": "A list of courses (which is an array of their unique identifiers).",
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of courses to return.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of courses to skip.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            }
          ],
          "headers": [
            {
              "name": "Content-Type",
              "description": "Indicates the media type of the resource",
              "type": "string",
              "defaultValue": "application/json",
              "required": false,
              "values": [
                "application/json"
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of related courses.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Courses - Get Related By Courses",
        "method": "POST",
        "urlTemplate": "/courses/courses/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/courses-get-related-by-courses-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-courses/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'courses-get-related-by-courses')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-courses/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'courses-get-related-by-courses')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "job",
            "description": "This is a unique identifier for a job",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns courses related to a job posting based on skill association. A valid subscriber JWT being supplied does not affect the output of this endpoint as all courses are online-based (geographic data does not influence courses).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of courses to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of courses to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of courses that are related to the specified job.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Courses - Get Related By Job",
        "method": "GET",
        "urlTemplate": "/courses/job/{job}/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db19e85c35bf1f72bbc3484')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5db19e85c35bf1f72bbc3484-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db19e85c35bf1f72bbc3484/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5db19e85c35bf1f72bbc3484')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db19e85c35bf1f72bbc3484/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5db19e85c35bf1f72bbc3484')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db19e85c35bf1f72bbc3484/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5db19e85c35bf1f72bbc3484')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns a list of courses that are associated with the list of jobs provided in the body of the HTTP request (POST).",
        "request": {
          "description": "A list of jobs (which is an array of their unique identifiers).",
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of courses to return.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of courses to skip.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            }
          ],
          "headers": [
            {
              "name": "Content-Type",
              "description": "Indicates the media type of the resource",
              "type": "string",
              "defaultValue": "application/json",
              "required": false,
              "values": [
                "application/json"
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of related courses.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Courses - Get Related By Jobs",
        "method": "POST",
        "urlTemplate": "/courses/jobs/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dfd12763ce9e6a90f4784b0')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5dfd12763ce9e6a90f4784b0-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dfd12763ce9e6a90f4784b0/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dfd12763ce9e6a90f4784b0')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dfd12763ce9e6a90f4784b0/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dfd12763ce9e6a90f4784b0')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dfd12763ce9e6a90f4784b0/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dfd12763ce9e6a90f4784b0')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns courses related to a subscriber based on skill association. A valid subscriber JWT must be supplied in order to return related courses.",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of courses to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of courses to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of courses that are related to the specified subscriber.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Courses - Get Related By Subscriber",
        "method": "GET",
        "urlTemplate": "/courses/subscribers/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-subscriber')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/courses-get-related-by-subscriber-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-subscriber/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'courses-get-related-by-subscriber')]"
      ]
    },
    {
      "properties": {
        "displayName": "Courses"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-subscriber/courses')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'courses-get-related-by-subscriber')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/courses-get-related-by-subscriber/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'courses-get-related-by-subscriber')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates an education level.",
        "request": {
          "description": "This is an education level.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Education Level - Create",
        "method": "POST",
        "urlTemplate": "/education-levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb8d1fbbd237eca4c87d')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bdb8d1fbbd237eca4c87d-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb8d1fbbd237eca4c87d/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb8d1fbbd237eca4c87d')]"
      ]
    },
    {
      "properties": {
        "displayName": "Education Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb8d1fbbd237eca4c87d/education-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb8d1fbbd237eca4c87d')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "education-level",
            "description": "This is a unique identifier for an education level.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes an education level.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Education Level - Delete",
        "method": "DELETE",
        "urlTemplate": "/education-levels/{education-level}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb8aee2c6e26e16bbed4')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bdb8aee2c6e26e16bbed4-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb8aee2c6e26e16bbed4/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb8aee2c6e26e16bbed4')]"
      ]
    },
    {
      "properties": {
        "displayName": "Education Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb8aee2c6e26e16bbed4/education-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb8aee2c6e26e16bbed4')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "educationLevel",
            "description": "This is a unique identifier for an education level.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific education level.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is an education level.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Education Level - Detail",
        "method": "GET",
        "urlTemplate": "/education-levels/{educationLevel}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb86f3345d69de2f5cd0')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bdb86f3345d69de2f5cd0-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb86f3345d69de2f5cd0/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb86f3345d69de2f5cd0')]"
      ]
    },
    {
      "properties": {
        "displayName": "Education Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb86f3345d69de2f5cd0/education-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb86f3345d69de2f5cd0')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of education levels. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of education levels.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Education Level - List",
        "method": "GET",
        "urlTemplate": "/education-levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb82f9bba081798e3f2f')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bdb82f9bba081798e3f2f-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb82f9bba081798e3f2f/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb82f9bba081798e3f2f')]"
      ]
    },
    {
      "properties": {
        "displayName": "Education Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb82f9bba081798e3f2f/education-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb82f9bba081798e3f2f')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "education-level",
            "description": "This is a unique identifier for an education level.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific education level.",
        "request": {
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Education Level - Update",
        "method": "PUT",
        "urlTemplate": "/education-levels/{education-level}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb79c36f96f13b0d6256')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bdb79c36f96f13b0d6256-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb79c36f96f13b0d6256/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb79c36f96f13b0d6256')]"
      ]
    },
    {
      "properties": {
        "displayName": "Education Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bdb79c36f96f13b0d6256/education-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bdb79c36f96f13b0d6256')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of educational degree types.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of all educational degree types.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Educational Degree Type - All",
        "method": "GET",
        "urlTemplate": "/educational-degree-types/all"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0e645f4412b3daa1957c0c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5e0e645f4412b3daa1957c0c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0e645f4412b3daa1957c0c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5e0e645f4412b3daa1957c0c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "educationalDegreeType",
            "description": "This is the unique identifier for educational degree type",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a list of educational degree types.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of all educational degree types.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Educational Degree Type - Detail",
        "method": "GET",
        "urlTemplate": "/educational-degree-types/{educationalDegreeType}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0e66b37245b5b026ffea9c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5e0e66b37245b5b026ffea9c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0e66b37245b5b026ffea9c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5e0e66b37245b5b026ffea9c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of educational degree types.",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "20",
              "required": false,
              "values": [
                "20"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of all educational degree types.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Educational Degree Type - List",
        "method": "GET",
        "urlTemplate": "/educational-degree-types/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0e662b9d9bc19760c2b184')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5e0e662b9d9bc19760c2b184-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0e662b9d9bc19760c2b184/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5e0e662b9d9bc19760c2b184')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates an employment type.",
        "request": {
          "description": "This is an employment type.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Employment Type - Create",
        "method": "POST",
        "urlTemplate": "/employment-types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be2a20e26f02981e79b59')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be2a20e26f02981e79b59-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be2a20e26f02981e79b59/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be2a20e26f02981e79b59')]"
      ]
    },
    {
      "properties": {
        "displayName": "Employment Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be2a20e26f02981e79b59/employment-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be2a20e26f02981e79b59')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "employmentType",
            "description": "This is a unique identifier for an employment type.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes an employment type.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Employment Type - Delete",
        "method": "DELETE",
        "urlTemplate": "/employment-types/{employmentType}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29fcd21c04ef7d27913')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be29fcd21c04ef7d27913-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29fcd21c04ef7d27913/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be29fcd21c04ef7d27913')]"
      ]
    },
    {
      "properties": {
        "displayName": "Employment Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29fcd21c04ef7d27913/employment-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be29fcd21c04ef7d27913')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "employmentType",
            "description": "This is a unique identifier for an employment type.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific employment type.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is an employment type.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Employment Type - Detail",
        "method": "GET",
        "urlTemplate": "/employment-types/{employmentType}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29d9a7a814e2dee489c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be29d9a7a814e2dee489c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29d9a7a814e2dee489c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be29d9a7a814e2dee489c')]"
      ]
    },
    {
      "properties": {
        "displayName": "Employment Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29d9a7a814e2dee489c/employment-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be29d9a7a814e2dee489c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of employment types. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of employment types.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Employment Type - List",
        "method": "GET",
        "urlTemplate": "/employment-types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29a76934c9613284c31')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be29a76934c9613284c31-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29a76934c9613284c31/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be29a76934c9613284c31')]"
      ]
    },
    {
      "properties": {
        "displayName": "Employment Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be29a76934c9613284c31/employment-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be29a76934c9613284c31')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "employmentType",
            "description": "This is a unique identifier for an employment type.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific employment type.",
        "request": {
          "description": "An employment type.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Employment Type - Update",
        "method": "PUT",
        "urlTemplate": "/employment-types/{employmentType}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be2965bfd365255cd34ca')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7be2965bfd365255cd34ca-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be2965bfd365255cd34ca/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be2965bfd365255cd34ca')]"
      ]
    },
    {
      "properties": {
        "displayName": "Employment Types"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7be2965bfd365255cd34ca/employment-types')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7be2965bfd365255cd34ca')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "This endpoint is to be called when an existing user joins a campaign. ",
        "request": {
          "description": "Details about the subscriber to be created.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Existing Subscriber Registration",
        "method": "POST",
        "urlTemplate": "/subscribers/existing-subscriber-campaign-signup"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5df92cd09340ee4befb744f9')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5df92cd09340ee4befb744f9-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5df92cd09340ee4befb744f9/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5df92cd09340ee4befb744f9')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a company.",
        "request": {
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Experience Level - Create",
        "method": "POST",
        "urlTemplate": "/experience-levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde945219fa833f223a4c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bde945219fa833f223a4c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde945219fa833f223a4c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde945219fa833f223a4c')]"
      ]
    },
    {
      "properties": {
        "displayName": "Experience Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde945219fa833f223a4c/experience-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde945219fa833f223a4c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "experienceLevel",
            "description": "This is a unique identifier for an experience level.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes an experience level.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Experience Level - Delete",
        "method": "DELETE",
        "urlTemplate": "/experience-levels/{experienceLevel}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde9100cde0b6b65ed653')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bde9100cde0b6b65ed653-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde9100cde0b6b65ed653/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde9100cde0b6b65ed653')]"
      ]
    },
    {
      "properties": {
        "displayName": "Experience Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde9100cde0b6b65ed653/experience-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde9100cde0b6b65ed653')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "experienceLevel",
            "description": "This is a unique identifier for an experience level.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific experience level.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a company.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Experience Level - Detail",
        "method": "GET",
        "urlTemplate": "/experience-levels/{experienceLevel}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde8dd17c56f028d84269')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bde8dd17c56f028d84269-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde8dd17c56f028d84269/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde8dd17c56f028d84269')]"
      ]
    },
    {
      "properties": {
        "displayName": "Experience Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde8dd17c56f028d84269/experience-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde8dd17c56f028d84269')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of experience levels. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Experience Level - List",
        "method": "GET",
        "urlTemplate": "/experience-levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde8a61ef7233a2602328')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bde8a61ef7233a2602328-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde8a61ef7233a2602328/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde8a61ef7233a2602328')]"
      ]
    },
    {
      "properties": {
        "displayName": "Experience Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde8a61ef7233a2602328/experience-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde8a61ef7233a2602328')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "experienceLevel",
            "description": "This is a unique identifier for an experience level.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific experience level.",
        "request": {
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Experience Level - Update",
        "method": "PUT",
        "urlTemplate": "/experience-levels/{experienceLevel}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde84fbcefa3bfc4a9835')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7bde84fbcefa3bfc4a9835-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde84fbcefa3bfc4a9835/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde84fbcefa3bfc4a9835')]"
      ]
    },
    {
      "properties": {
        "displayName": "Experience Levels"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7bde84fbcefa3bfc4a9835/experience-levels')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7bde84fbcefa3bfc4a9835')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates an industry.",
        "request": {
          "description": "Creates an industry.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Industry - Create",
        "method": "POST",
        "urlTemplate": "/industries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba56e66768419fbc16733')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba56e66768419fbc16733-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba56e66768419fbc16733/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba56e66768419fbc16733')]"
      ]
    },
    {
      "properties": {
        "displayName": "Industries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba56e66768419fbc16733/industries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba56e66768419fbc16733')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "industry",
            "description": "This is a unique identifier for an industry.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes an industry.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Industry - Delete",
        "method": "DELETE",
        "urlTemplate": "/industries/{industry}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba5690eef1cabce1520ec')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba5690eef1cabce1520ec-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba5690eef1cabce1520ec/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba5690eef1cabce1520ec')]"
      ]
    },
    {
      "properties": {
        "displayName": "Industries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba5690eef1cabce1520ec/industries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba5690eef1cabce1520ec')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "industry",
            "description": "This is a unique identifier for an industry.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific industry.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is an industry.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n\t\"industryGuid\" : \"805B7834-2B82-44AA-BBDE-0A3DD8171E37\",\n\t\"industryName\" : \"Management\"\n}\n",
                "schemaId": "1568048068575",
                "typeName": "Industry"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Industry - Detail",
        "method": "GET",
        "urlTemplate": "/industries/{industry}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba56585df8e3eff7cda1a')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba56585df8e3eff7cda1a-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba56585df8e3eff7cda1a/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba56585df8e3eff7cda1a')]"
      ]
    },
    {
      "properties": {
        "displayName": "Industries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba56585df8e3eff7cda1a/industries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba56585df8e3eff7cda1a')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of industries. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of industries.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Industry - List",
        "method": "GET",
        "urlTemplate": "/industries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba55aba012992ae461941')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba55aba012992ae461941-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba55aba012992ae461941/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba55aba012992ae461941')]"
      ]
    },
    {
      "properties": {
        "displayName": "Industries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba55aba012992ae461941/industries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba55aba012992ae461941')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "industry",
            "description": "This is a unique identifier for an industry.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Updates a specific industry.",
        "request": {
          "description": "The industry to update.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Industry - Update",
        "method": "PUT",
        "urlTemplate": "/industries/{industry}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba4e7aa5ff1cba0210a4b')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7ba4e7aa5ff1cba0210a4b-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba4e7aa5ff1cba0210a4b/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba4e7aa5ff1cba0210a4b')]"
      ]
    },
    {
      "properties": {
        "displayName": "Industries"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7ba4e7aa5ff1cba0210a4b/industries')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7ba4e7aa5ff1cba0210a4b')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Sends an email notification for a job from a logged-in user.",
        "request": {
          "description": "The body of the message contains all of the information required to create a course referral - the subscriber that will be associated with the sender comes from the JWT submitted with the request.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job - Refer A Friend",
        "method": "POST",
        "urlTemplate": "/jobs/refer"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de928d9a372540899d30c40')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5de928d9a372540899d30c40-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de928d9a372540899d30c40/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de928d9a372540899d30c40')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5de928d9a372540899d30c40/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5de928d9a372540899d30c40')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a job.",
        "request": {
          "description": "This is a job.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Admin - Create",
        "method": "POST",
        "urlTemplate": "/jobs/admin"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f99382a0a5364daedd4a6')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7f99382a0a5364daedd4a6-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f99382a0a5364daedd4a6/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f99382a0a5364daedd4a6')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f99382a0a5364daedd4a6/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f99382a0a5364daedd4a6')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "job",
            "description": "This is a unique identifier for a job.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes a job.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Admin - Delete",
        "method": "DELETE",
        "urlTemplate": "/jobs/admin/{job}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f993582be7ed69ee0091b')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7f993582be7ed69ee0091b-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f993582be7ed69ee0091b/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f993582be7ed69ee0091b')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f993582be7ed69ee0091b/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f993582be7ed69ee0091b')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "job",
            "description": "This is a unique identifier for a job.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieves a specific job.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "This is a company.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Admin - Detail",
        "method": "GET",
        "urlTemplate": "/jobs/admin/{job}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f993218abe72f785caa05')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7f993218abe72f785caa05-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f993218abe72f785caa05/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f993218abe72f785caa05')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f993218abe72f785caa05/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f993218abe72f785caa05')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of jobs. This endpoint is intended to be used from an admin screen (hence the paging and sorting capability).",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of records to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            },
            {
              "name": "offset",
              "description": "The number of records to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": false,
              "values": [
                "0"
              ]
            },
            {
              "name": "sort",
              "description": "The field name on which to sort. Defaults to modifyDate if not specified.",
              "type": "string",
              "defaultValue": "modifyDate",
              "required": false,
              "values": [
                "modifyDate"
              ]
            },
            {
              "name": "order",
              "description": "The direction of the sort. Defaults to descending if not specified.",
              "type": "string",
              "required": false,
              "values": [
                "descending"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "A list of jobs.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Admin - List",
        "method": "GET",
        "urlTemplate": "/jobs/admin"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f992f3fd94c67af87b8cf')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7f992f3fd94c67af87b8cf-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f992f3fd94c67af87b8cf/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f992f3fd94c67af87b8cf')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f992f3fd94c67af87b8cf/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f992f3fd94c67af87b8cf')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "job",
            "description": "This is a unique identifier for a job.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Updates a specific job.",
        "request": {
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Admin - Update",
        "method": "PUT",
        "urlTemplate": "/jobs/admin/{job}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f9928dd52765bbbef046c')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7f9928dd52765bbbef046c-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f9928dd52765bbbef046c/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f9928dd52765bbbef046c')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7f9928dd52765bbbef046c/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7f9928dd52765bbbef046c')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Creates a job alert for the job and subscriber defined by the url template parameters. A subscriber may only have five active job alerts at any given time. Note that the dates and times are UTC (it is the responsibility of the calling code to convert to the user's local time zone).",
        "request": {
          "description": "The job alert to be created. Note that the dates and times are UTC (it is the responsibility of the calling code to convert to the user's local time zone). Only two values may be passed to \"frequency\": \"Weekly\" or \"Daily\". Weekly alerts require the \"executionDayOfWeek\" parameter to be populated - acceptable values for this field are \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", and \"Saturday\". For Daily alerts, the \"executionDayOfWeek\" parameter is ignored.",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Alert - Create",
        "method": "POST",
        "urlTemplate": "/jobs/alert"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-create')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/job-alert-create-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-create/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-create')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-create/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-create')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-create/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-create')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "jobAlert",
            "description": "This is a unique identitifer for a job alert",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Performs a logical deletion for a job alert. ",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Alert - Delete",
        "method": "DELETE",
        "urlTemplate": "/jobs/alert/{jobAlert}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-delete')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/job-alert-delete-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-delete/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-delete')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-delete/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-delete')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-delete/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-delete')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "jobAlert",
            "description": "This is a unique identifier for a job alert",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Updates a job alert for the job and subscriber defined by the url template parameters. A subscriber may only have five active job alerts at any given time. Note that the dates and times are UTC (it is the responsibility of the calling code to convert to the user's local time zone).",
        "request": {
          "description": "The job alert to be created. Note that the dates and times are UTC (it is the responsibility of the calling code to convert to the user's local time zone). Only two values may be passed to \"frequency\": \"Weekly\" or \"Daily\". Weekly alerts require the \"executionDayOfWeek\" parameter to be populated - acceptable values for this field are \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", and \"Saturday\". For Daily alerts, the \"executionDayOfWeek\" parameter is ignored.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\n\t\"description\": \"Search result for keyword 'avionics' in location 'Colorado'\",\n\t\"frequency\": \"Weekly\",\n\t\"executionDayOfWeek\": \"Friday\",\n\t\"location\": \"Colorado\",\n\t\"keywords\": \"avionics\"\t\t\n}",
              "schemaId": "1568048068575"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 204,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Alert - Edit",
        "method": "PUT",
        "urlTemplate": "/jobs/alert/{jobAlert}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dc45f46bfda3d486534d089')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5dc45f46bfda3d486534d089-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dc45f46bfda3d486534d089/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dc45f46bfda3d486534d089')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dc45f46bfda3d486534d089/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dc45f46bfda3d486534d089')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5dc45f46bfda3d486534d089/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5dc45f46bfda3d486534d089')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Retrieves a list of job alerts for a subscriber. Note that the hours returned are in UTC and must be converted to local time.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Alert - List by Subscriber",
        "method": "GET",
        "urlTemplate": "/jobs/alert"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-list-by-subscriber')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/job-alert-list-by-subscriber-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-list-by-subscriber/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-list-by-subscriber')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-list-by-subscriber/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-list-by-subscriber')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-alert-list-by-subscriber/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-alert-list-by-subscriber')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "job",
            "description": "This is a unique identifier for a job.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Checks if a subscriber has applied to a job posting",
        "request": {
          "description": "The cover letter content to use (from a resume).",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "true"
              }
            ]
          }
        ],
        "displayName": "Job Application - Check",
        "method": "GET",
        "urlTemplate": "/jobs/{job}/applications"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0b94177634eb1971255b53')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5e0b94177634eb1971255b53-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5e0b94177634eb1971255b53/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5e0b94177634eb1971255b53')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "job",
            "description": "This is a unique identifier for a job.",
            "type": "guid",
            "required": true,
            "values": []
          }
        ],
        "description": "Creates a job application for a subscriber.",
        "request": {
          "description": "The cover letter content to use (from a resume).",
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "Indicates that the application was received successfully.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Application - Create",
        "method": "POST",
        "urlTemplate": "/jobs/{job}/applications"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-application')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/job-application-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-application/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-application')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-application/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-application')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-application/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-application')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "excludejobs",
              "description": "Exclude jobs in returned payload",
              "type": "int",
              "required": false,
              "values": []
            },
            {
              "name": "excludefacets",
              "description": "Exclude facets in returned payload",
              "type": "string ",
              "required": false,
              "values": []
            },
            {
              "name": "country",
              "description": "2 character country code (us only for now)",
              "type": "string ",
              "required": false,
              "values": []
            },
            {
              "name": "province",
              "description": "2 character provence/state code e.g md, pa, ny",
              "type": "string ",
              "required": false,
              "values": []
            },
            {
              "name": "city",
              "description": "Name of the city being browsed for jobs",
              "type": "string ",
              "required": false,
              "values": []
            },
            {
              "name": "pagesize",
              "description": "Number of jobs to include",
              "type": "int",
              "required": false,
              "values": []
            },
            {
              "name": "pagenum",
              "description": "Page number to return of job results",
              "type": "int",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": []
          }
        ],
        "displayName": "Job Browse Location - List",
        "method": "GET",
        "urlTemplate": "/job/browse/location"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-browse-location-list')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/job-browse-location-list-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/job-browse-location-list/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', 'job-browse-location-list')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns the total number of recommended jobs for a subscriber.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The total number of active jobs.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 401,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job CareerPath Recommendation Count ",
        "method": "GET",
        "urlTemplate": "/jobs/recommendations/count"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aaff0c5c30dc1145a4546')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7aaff0c5c30dc1145a4546-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aaff0c5c30dc1145a4546/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aaff0c5c30dc1145a4546')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aaff0c5c30dc1145a4546/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aaff0c5c30dc1145a4546')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aaff0c5c30dc1145a4546/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aaff0c5c30dc1145a4546')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns a collection of recommended jobs for a subscriber.",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of jobs to return. Defaults to the maximum (10) if no value is specified.",
              "type": "int",
              "required": true,
              "values": [
                "5"
              ]
            },
            {
              "name": "offset",
              "description": "The number of jobs to skip before returning results. Defaults to zero if no value is specified.",
              "type": "int",
              "defaultValue": "0",
              "required": true,
              "values": [
                "0"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "The total number of active jobs.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job CareerPath Recommendations",
        "method": "GET",
        "urlTemplate": "/jobs/recommendations/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa7f0b16c9e869fb933f4')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5d7aa7f0b16c9e869fb933f4-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa7f0b16c9e869fb933f4/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aa7f0b16c9e869fb933f4')]"
      ]
    },
    {
      "properties": {
        "displayName": "Jobs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa7f0b16c9e869fb933f4/jobs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aa7f0b16c9e869fb933f4')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscribers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5d7aa7f0b16c9e869fb933f4/subscribers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5d7aa7f0b16c9e869fb933f4')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns courses related to the specified job",
        "request": {
          "queryParameters": [
            {
              "name": "limit",
              "description": "The number of jobs to return. Defaults to the maximum (100) if no value is specified.",
              "type": "int",
              "defaultValue": "100",
              "required": false,
              "values": [
                "100"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returns active jobs that conform to the query parameters.",
            "headers": []
          },
          {
            "statusCode": 400,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Job Courses By Skill Histogram - List",
        "method": "POST",
        "urlTemplate": "/courses/skill/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db1a1351259de117e35224a')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'api2-staging', '1568048068575')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5db1a1351259de117e35224a-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/5db1a1351259de117e35224a/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'api2-staging', '5db1a1351259de117e35224a')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/api2-staging-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/api2-staging/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/career-circle-partner/api2-staging')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'api2-staging')]"
      ]
    },
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "displayName": "Echo API",
        "serviceUrl": "http://echoapi.cloudapp.net/api",
        "path": "echo",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
        "request": {
          "queryParameters": [],
          "headers": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Create resource",
        "method": "POST",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/create-resource-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'create-resource')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Modify Resource",
        "method": "PUT",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/modify-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Remove resource",
        "method": "DELETE",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/remove-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve header only",
        "method": "HEAD",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/retrieve-header-only-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-header-only')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "param1",
            "description": "A sample parameter that is required and has a default value of \"sample\".",
            "type": "string",
            "defaultValue": "sample",
            "required": true,
            "values": [
              "sample"
            ]
          }
        ],
        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
        "request": {
          "queryParameters": [
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "number",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returned in all cases.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource",
        "method": "GET",
        "urlTemplate": "/resource?param1={param1}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "param1",
            "description": "A sample parameter that is required and has a default value of \"sample\".",
            "type": "string",
            "defaultValue": "sample",
            "required": true,
            "values": [
              "sample"
            ]
          }
        ],
        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
        "request": {
          "queryParameters": [
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource (cached)",
        "method": "GET",
        "urlTemplate": "/resource-cached?param1={param1}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/retrieve-resource-cached-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-resource-cached')]"
      ]
    }
  ]
}